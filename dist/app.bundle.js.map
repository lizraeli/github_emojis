{"version":3,"sources":["webpack:///webpack/bootstrap 12223f5afe59c6451218","webpack:///./src/index.js","webpack:///./node_modules/baconjs/dist/Bacon.js","webpack:///(webpack)/buildin/global.js","webpack:///(webpack)/buildin/module.js","webpack:///(webpack)/buildin/amd-define.js","webpack:///(webpack)/buildin/amd-options.js"],"names":["__webpack_require__","moduleId","installedModules","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","Bacon","imageList","document","getElementById","searchInput","emojis","emojiKeys","addEventListener","event","fetch","then","res","json","data","keys","innerHTML","showEmptyList","catch","err","console","log","setAttribute","showError","fromEvent","debounce","onValue","e","searchText","target","value","classList","add","setTimeout","text","toLowerCase","emojiList","filter","key","length","startsWith","includes","map","showNoResults","join","showEmojiList","remove","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","Source","obs","sync","lazy","arguments","undefined","this","queue","ConsumingSource","apply","BufferingSource","Desc","context","method","args","Some","Event","id","eventIdCounter","Next","valueF","eager","_","isFunction","_isNext","valueInternal","Initial","End","Error","error","Observable","desc","idCounter","initialDesc","CompositeUnsubscribe","ss","unsubscribe","bind","unsubscribed","subscriptions","starting","Dispatcher","_subscribe","_handleEvent","subscribe","handleEvent","pushing","ended","prevError","unsubSrc","EventStream","handler","empty","assertFunction","dispatcher","registerObs","PropertyDispatcher","current","None","currentValueRootId","propertyEnded","Property","Bus","unsubAll","subscribeAll","guardedSink","sink","ESObservable","observable","_slice","Array","slice","toString","version","Exception","global","nop","former","x","assert","message","condition","assertObservableIsProperty","_isObservable","_isProperty","f","isArray","xs","isObservable","extend","prop","inherit","child","parent","hasProp","ctor","symbol","Symbol","indexOf","y","indexWhere","head","always","negate","tail","filtered","push","result","each","toArray","contains","last","all","any","without","splice","fold","seed","flatMap","ys","concat","cached","_isNone","fn","me","obj","recursionDepth","results","UpdateBarrier","ensureStackHeight","h","aftersStackHeight","aftersStack","processAfters","stackSizeAtStart","topOfStack","topAfters","index","_topAfters$index","after","callSuccess","rootEvent","waiterObs","waiters","flushed","afterTransaction","stackIndexForThisObs","aftersList","containsObs","flushWaiters","deps","obsId","obsWaiters","flushDepsOf","dep","internalDeps","whenDoneWith","hasWaiters","inTransaction","flush","currentEventId","wrappedSubscribe","unsubd","shouldUnsub","doUnsub","unsub","noMore","_isSource","markEnded","consume","mayHave","hasAtLeast","flatten","shift","values","isTrigger","_isEventStream","fromObservable","_isDesc","findDeps","describe","ref","_len","_key","withDesc","withMethodCallSupport","wrapped","_len2","_key2","methodName","makeFunctionArgs","makeFunction_","partiallyApplied","applied","_len3","_key3","toFieldExtractor","parts","split","partFuncs","fieldValue","toSimpleExtractor","isFieldKey","charAt","_len4","_key4","makeFunction","convertArgsToFunction","sampled","sampledBy","_ref","_ref2","toCombinator","toFieldKey","left","right","_isSome","getOrElse","forEach","isDefined","inspect","toOption","v","more","_isEvent","isEvent","isEnd","isInitial","isNext","isError","hasValue","fmap","_isInitial","toNext","initialEvent","nextEvent","endEvent","toEvent","subscribeInternal","onValues","onError","onEnd","_name","withDescription","assign","subscription","_this2","iterable","count","hasSubscribers","removeSub","pushIt","pushToSubscriptions","tmp","len","sub","unsubscribeFromSource","_this","toProperty","initValue_","initValue","disp","initSent","subbed","reply","sendInit","toEventStream","withHandler","never","when","sources","pats","patterns","patSources","pat","constantToFunction","ixs","triggerFound","j","ix","k","needsBarrier","containsDuplicateDeps","resultStream","triggers","ends","match","i1","cannotSync","source","cannotMatch","nonFlattened","trigger","part","flushLater","flushWhileTriggers","pop","events","i2","_p","observables","state","checkObservable","groupSimultaneous","_len5","streams","_key5","_len6","_key6","maybeSubSource","_this3","dispatchingId","valId","changes","_this4","assertNoArguments","_this5","constant","fromBinder","binder","eventTransformer","unbound","shouldUnbind","unbind","unbinder","_len7","_key7","_len8","_key8","argumentsToObservables","argumentsToObservablesAndFunction","combineAsArray","stream","_len9","_key9","combineWith","_argumentsToObservablesAndFunction","combine","other","combinator","withStateMachine","initState","fromF","newState","outputs","output","skipDuplicates","isEqual","a","b","prev","isNone","awaiting","not","and","or","scheduler","setInterval","clearInterval","clearTimeout","now","Date","getTime","bufferWithTime","delay","bufferWithTimeOrCount","Number","MAX_VALUE","bufferWithCount","flushOrSchedule","buffer","schedule","onInput","onFlush","scheduled","end","valuesToPush","_this6","delayMs","_this7","_len10","_key10","once","unsubRight","unsubLeft","addPropertyInitValueToStream","concatAll","justInitValue","flatMap_","makeSpawner","flatMapFirst","makeObservable","root","firstOnly","limit","rootDep","childDeps","composite","spawn","unsubMe","checkQueue","checkEnd","__","unsubRoot","flatMapWithConcurrencyLimit","_len11","_key11","flatMapConcat","later","bufferingThrottle","minimumInterval","newSink","cloneArray","subscribeInput","input","_this8","unsubscribeInput","plug","_this9","assertObservable","rootPush","pushQueue","liftCallback","callback","_len12","_key12","fromCallback","_len13","_key13","fromNodeCallback","_len14","_key14","combineTemplate","template","setValue","ctxStack","mkContext","containsObservables","constructor","compile","funcs","applyStreamValue","popContext","newContext","pushContext","compileTemplate","constantValue","resultProperty","rootContext","mapEnd","skipErrors","takeUntil","stopper","endMarker","_event$value","flatMapLatest","delayChanges","debounceImmediate","decode","cases","scan","_this10","acc","initHandled","next","diff","start","prevTuple","tuple","doAction","doEnd","doError","doLog","_len15","_key15","endOnError","_len16","_key16","errors","take","first","mapError","flatMapError","flatScan","updated","sampler","thisSource","samplerSource","sample","interval","_len17","_key17","reduce","eventMethods","fromEventTarget","eventName","_findHandlerMethods","pair","methodPair","addListener","findHandlerMethods","fromPoll","poll","fromPromise","promise","abort","bound","done","groupBy","keyF","limitF","src","similar","limited","fromArray","assertArray","pushNeeded","holdWhen","valve","onHold","bufferedValues","srcIsEnded","subscribed","endIfBothEnded","toSend","$","asEventStream","selector","_this11","on","off","jQuery","Zepto","lastEvent","_len18","_key18","merge","assertEventStream","mergeAll","sinks","unsubBoth","repeatedly","repeat","generator","flag","subscribeNext","retry","options","retries","retriesDone","isRetryable","finished","valueStream","pause","sequentially","skip","skipUntil","starter","started","skipWhile","ok","_len19","_key19","slidingWindow","minValues","window","spies","running","spy","startWith","takeWhile","_len20","_key20","throttle","firstToPromise","PromiseCtr","_this12","Promise","resolve","reject","toPromise","update","initial","lateBindFirst","_len22","_key22","_len21","_key21","Function","zipAsArray","_len23","_key23","zipWith","_len24","_key24","_len25","_key25","observablesAndFunction","zip","observerOrOnNext","onComplete","observer","complete","closed","cancel","toESObservable","fromESObservable","_observable","g","eval","webpackPolyfill","deprecate","paths","children","__webpack_amd_options__"],"mappings":"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","file":"app.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 12223f5afe59c6451218","const Bacon = require('baconjs/dist/Bacon.js')\nconst imageList = document.getElementById('imageList')\nconst searchInput = document.getElementById('searchInput')\n\nlet searchText = '';\nlet nextSearchText = '';\nlet changed = false;\nlet emojis = {};\nlet emojiKeys = [];\n\ndocument.addEventListener(\"DOMContentLoaded\", function (event) {\n  fetch('https://api.github.com/emojis')\n    .then(res => res.json())\n    .then(data => {\n      emojis = data;\n      emojiKeys = Object.keys(emojis);\n      imageList.innerHTML = showEmptyList();\n    })\n    .catch((err) => {\n      console.log(err)\n      searchInput.setAttribute('disabled', 'true')\n      imageList.innerHTML = showError();\n    })\n})\n\n\nconst showEmojiList = (searchText) => {\n  const text = searchText.toLowerCase();\n  const emojiList =\n    emojiKeys\n      .filter(key => text.length < 3 ?\n        key.startsWith(text) : key.includes(text)\n      )\n      .map(key => `\n        <div class='item'>\n          <p> <strong> ${key} </strong> </p>\n          <p> <img alt=${key} src=${emojis[key]}> </p>\n        </div>\n      `);\n\n  return emojiList.length === 0 ?\n    showNoResults() : emojiList.join('')\n}\n\n\nconst inputStream = Bacon\n  // stream of input events from the search input field\n  .fromEvent(searchInput, 'input')\n  // Wait 300 ms between events\n  .debounce(300)\n\n// Re-render list on each value received from the input stream\ninputStream.onValue((e) => {\n  const searchText = e.target.value;\n  imageList.classList.add('pre-animation')\n\n  setTimeout(() => {\n    imageList.innerHTML =\n      searchText === '' ? showEmptyList() : showEmojiList(searchText)\n    imageList.classList.remove('pre-animation')\n  }, 300)\n})\n\n\nconst showNoResults = () => `\n  <div class='item'>\n    <p> No Search Results </p>\n    <p> \n      <img alt=\"crying_cat_face\" src=${emojis['crying_cat_face']}> \n    </p>\n  </div>`\n  \nconst showEmptyList = () => `\n  <div class='item'>\n    <p> Start Typing Above </p>\n    <p> \n      <img alt=\"keyboard\" src=${emojis['keyboard']}>\n    </p>\n  </div>`\n\nconst showLoading = () => `\n  <div class='item'>\n    <p> Loading... </p>\n  </div>`\n\nconst showError = () => `\n  <div class='item'>\n    <p> Error Fetching Emojis </p>\n  </div>`\n\n\n\n\n\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/index.js\n// module id = 0\n// module chunks = 0","(function() {\nvar _slice = Array.prototype.slice;\nvar Bacon = {\n  toString: function () {\n    return \"Bacon\";\n  }\n};\n\nBacon.version = '0.7.95';\n\nvar Exception = (typeof global !== \"undefined\" && global !== null ? global : this).Error;\nvar nop = function () {};\nvar latter = function (_, x) {\n  return x;\n};\nvar former = function (x, _) {\n  return x;\n};\nvar cloneArray = function (xs) {\n  return xs.slice(0);\n};\nvar assert = function (message, condition) {\n  if (!condition) {\n    throw new Exception(message);\n  }\n};\nvar assertObservableIsProperty = function (x) {\n  if ((x != null ? x._isObservable : void 0) && !(x != null ? x._isProperty : void 0)) {\n    throw new Exception(\"Observable is not a Property : \" + x);\n  }\n};\nvar assertEventStream = function (event) {\n  if (!(event != null ? event._isEventStream : void 0)) {\n    throw new Exception(\"not an EventStream : \" + event);\n  }\n};\n\nvar assertObservable = function (event) {\n  if (!(event != null ? event._isObservable : void 0)) {\n    throw new Exception(\"not an Observable : \" + event);\n  }\n};\nvar assertFunction = function (f) {\n  return assert(\"not a function : \" + f, _.isFunction(f));\n};\nvar isArray = Array.isArray || function (xs) {\n  return xs instanceof Array;\n};\nvar isObservable = function (x) {\n  return x && x._isObservable;\n};\nvar assertArray = function (xs) {\n  if (!isArray(xs)) {\n    throw new Exception(\"not an array : \" + xs);\n  }\n};\nvar assertNoArguments = function (args) {\n  return assert(\"no arguments supported\", args.length === 0);\n};\nvar assertString = function (x) {\n  if (typeof x === \"string\") {\n    throw new Exception(\"not a string : \" + x);\n  }\n};\n\nvar extend = function (target) {\n  var length = arguments.length;\n  for (var i = 1; 1 < length ? i < length : i > length; 1 < length ? i++ : i--) {\n    for (var prop in arguments[i]) {\n      target[prop] = arguments[i][prop];\n    }\n  }\n  return target;\n};\n\nvar inherit = function (child, parent) {\n  var hasProp = ({}).hasOwnProperty;\n  var ctor = function () {};\n  ctor.prototype = parent.prototype;\n  child.prototype = new ctor();\n  for (var key in parent) {\n    if (hasProp.call(parent, key)) {\n      child[key] = parent[key];\n    }\n  }\n  return child;\n};\n\nvar symbol = function (key) {\n  if (typeof Symbol !== \"undefined\" && Symbol[key]) {\n    return Symbol[key];\n  } else if (typeof Symbol !== \"undefined\" && typeof Symbol[\"for\"] === \"function\") {\n    return Symbol[key] = Symbol[\"for\"](key);\n  } else {\n    return \"@@\" + key;\n  }\n};\n\nvar _ = {\n  indexOf: (function () {\n    if (Array.prototype.indexOf) {\n      return function (xs, x) {\n        return xs.indexOf(x);\n      };\n    } else {\n      return function (xs, x) {\n        for (var i = 0, y; i < xs.length; i++) {\n          y = xs[i];\n          if (x === y) {\n            return i;\n          }\n        }\n        return -1;\n      };\n    }\n  })(),\n  indexWhere: function (xs, f) {\n    for (var i = 0, y; i < xs.length; i++) {\n      y = xs[i];\n      if (f(y)) {\n        return i;\n      }\n    }\n    return -1;\n  },\n  head: function (xs) {\n    return xs[0];\n  },\n  always: function (x) {\n    return function () {\n      return x;\n    };\n  },\n  negate: function (f) {\n    return function (x) {\n      return !f(x);\n    };\n  },\n  empty: function (xs) {\n    return xs.length === 0;\n  },\n  tail: function (xs) {\n    return xs.slice(1, xs.length);\n  },\n  filter: function (f, xs) {\n    var filtered = [];\n    for (var i = 0, x; i < xs.length; i++) {\n      x = xs[i];\n      if (f(x)) {\n        filtered.push(x);\n      }\n    }\n    return filtered;\n  },\n  map: function (f, xs) {\n    return (function () {\n      var result = [];\n      for (var i = 0, x; i < xs.length; i++) {\n        x = xs[i];\n        result.push(f(x));\n      }\n      return result;\n    })();\n  },\n  each: function (xs, f) {\n    for (var key in xs) {\n      if (Object.prototype.hasOwnProperty.call(xs, key)) {\n        var value = xs[key];\n        f(key, value);\n      }\n    }\n  },\n  toArray: function (xs) {\n    return isArray(xs) ? xs : [xs];\n  },\n  contains: function (xs, x) {\n    return _.indexOf(xs, x) !== -1;\n  },\n  id: function (x) {\n    return x;\n  },\n  last: function (xs) {\n    return xs[xs.length - 1];\n  },\n  all: function (xs) {\n    var f = arguments.length <= 1 || arguments[1] === undefined ? _.id : arguments[1];\n\n    for (var i = 0, x; i < xs.length; i++) {\n      x = xs[i];\n      if (!f(x)) {\n        return false;\n      }\n    }\n    return true;\n  },\n  any: function (xs) {\n    var f = arguments.length <= 1 || arguments[1] === undefined ? _.id : arguments[1];\n\n    for (var i = 0, x; i < xs.length; i++) {\n      x = xs[i];\n      if (f(x)) {\n        return true;\n      }\n    }\n    return false;\n  },\n  without: function (x, xs) {\n    return _.filter(function (y) {\n      return y !== x;\n    }, xs);\n  },\n  remove: function (x, xs) {\n    var i = _.indexOf(xs, x);\n    if (i >= 0) {\n      return xs.splice(i, 1);\n    }\n  },\n  fold: function (xs, seed, f) {\n    for (var i = 0, x; i < xs.length; i++) {\n      x = xs[i];\n      seed = f(seed, x);\n    }\n    return seed;\n  },\n  flatMap: function (f, xs) {\n    return _.fold(xs, [], function (ys, x) {\n      return ys.concat(f(x));\n    });\n  },\n  cached: function (f) {\n    var value = None;\n    return function () {\n      if (typeof value !== \"undefined\" && value !== null ? value._isNone : undefined) {\n        value = f();\n        f = undefined;\n      }\n      return value;\n    };\n  },\n  bind: function (fn, me) {\n    return function () {\n      return fn.apply(me, arguments);\n    };\n  },\n  isFunction: function (f) {\n    return typeof f === \"function\";\n  },\n  toString: function (obj) {\n    var internals, key, value;\n    var hasProp = ({}).hasOwnProperty;\n    try {\n      recursionDepth++;\n      if (obj == null) {\n        return \"undefined\";\n      } else if (_.isFunction(obj)) {\n        return \"function\";\n      } else if (isArray(obj)) {\n        if (recursionDepth > 5) {\n          return \"[..]\";\n        }\n        return \"[\" + _.map(_.toString, obj).toString() + \"]\";\n      } else if ((obj != null ? obj.toString : void 0) != null && obj.toString !== Object.prototype.toString) {\n        return obj.toString();\n      } else if (typeof obj === \"object\") {\n        if (recursionDepth > 5) {\n          return \"{..}\";\n        }\n        internals = (function () {\n          var results = [];\n          for (key in obj) {\n            if (!hasProp.call(obj, key)) continue;\n            value = (function () {\n              var error;\n              try {\n                return obj[key];\n              } catch (error) {\n                return error;\n              }\n            })();\n            results.push(_.toString(key) + \":\" + _.toString(value));\n          }\n          return results;\n        })();\n        return \"{\" + internals + \"}\";\n      } else {\n        return obj;\n      }\n    } finally {\n      recursionDepth--;\n    }\n  }\n};\n\nvar recursionDepth = 0;\n\nBacon._ = _;\n\nvar UpdateBarrier = Bacon.UpdateBarrier = (function () {\n  var rootEvent;\n  var waiterObs = [];\n  var waiters = {};\n  var aftersStack = [];\n  var aftersStackHeight = 0;\n  var flushed = {};\n\n  function ensureStackHeight(h) {\n    if (h <= aftersStackHeight) return;\n    if (!aftersStack[h - 1]) {\n      aftersStack[h - 1] = [[], 0];\n    }\n    aftersStackHeight = h;\n  }\n\n  var afterTransaction = function (obs, f) {\n    if (rootEvent || aftersStack.length) {\n      ensureStackHeight(1);\n      var stackIndexForThisObs = 0;\n      while (stackIndexForThisObs < aftersStackHeight - 1) {\n        if (containsObs(obs, aftersStack[stackIndexForThisObs][0])) {\n          break;\n        }\n        stackIndexForThisObs++;\n      }\n      var listFromStack = aftersStack[stackIndexForThisObs][0];\n      listFromStack.push([obs, f]);\n      if (!rootEvent) {\n        processAfters();\n      }\n    } else {\n        return f();\n      }\n  };\n\n  function containsObs(obs, aftersList) {\n    for (var i = 0; i < aftersList.length; i++) {\n      if (aftersList[i][0].id == obs.id) return true;\n    }\n    return false;\n  }\n\n  function processAfters() {\n    var stackSizeAtStart = aftersStackHeight;\n    if (!stackSizeAtStart) return;\n    while (aftersStackHeight >= stackSizeAtStart) {\n      var topOfStack = aftersStack[aftersStackHeight - 1];\n      if (!topOfStack) throw new Error(\"Unexpected stack top: \" + topOfStack);\n      var topAfters = topOfStack[0];\n      var index = topOfStack[1];\n\n      if (index < topAfters.length) {\n        var _topAfters$index = topAfters[index];\n        var obs = _topAfters$index[0];\n        var after = _topAfters$index[1];\n\n        topOfStack[1]++;\n        ensureStackHeight(aftersStackHeight + 1);\n        var callSuccess = false;\n        try {\n          after();\n          callSuccess = true;\n          while (aftersStackHeight > stackSizeAtStart && aftersStack[aftersStackHeight - 1][0].length == 0) {\n            aftersStackHeight--;\n          }\n        } finally {\n          if (!callSuccess) {\n            aftersStack = [];\n            aftersStackHeight = 0;\n          }\n        }\n      } else {\n          topOfStack[0] = [];\n          topOfStack[1] = 0;\n          break;\n        }\n    }\n  }\n\n  var whenDoneWith = function (obs, f) {\n    if (rootEvent) {\n      var obsWaiters = waiters[obs.id];\n      if (!(typeof obsWaiters !== \"undefined\" && obsWaiters !== null)) {\n        obsWaiters = waiters[obs.id] = [f];\n        return waiterObs.push(obs);\n      } else {\n        return obsWaiters.push(f);\n      }\n    } else {\n      return f();\n    }\n  };\n\n  var flush = function () {\n    while (waiterObs.length > 0) {\n      flushWaiters(0, true);\n    }\n    flushed = {};\n  };\n\n  var flushWaiters = function (index, deps) {\n    var obs = waiterObs[index];\n    var obsId = obs.id;\n    var obsWaiters = waiters[obsId];\n    waiterObs.splice(index, 1);\n    delete waiters[obsId];\n    if (deps && waiterObs.length > 0) {\n      flushDepsOf(obs);\n    }\n    for (var i = 0, f; i < obsWaiters.length; i++) {\n      f = obsWaiters[i];\n      f();\n    }\n  };\n\n  var flushDepsOf = function (obs) {\n    if (flushed[obs.id]) return;\n    var deps = obs.internalDeps();\n    for (var i = 0, dep; i < deps.length; i++) {\n      dep = deps[i];\n      flushDepsOf(dep);\n      if (waiters[dep.id]) {\n        var index = _.indexOf(waiterObs, dep);\n        flushWaiters(index, false);\n      }\n    }\n    flushed[obs.id] = true;\n  };\n\n  var inTransaction = function (event, context, f, args) {\n    if (rootEvent) {\n      return f.apply(context, args);\n    } else {\n      rootEvent = event;\n      try {\n        var result = f.apply(context, args);\n\n        flush();\n      } finally {\n        rootEvent = undefined;\n        processAfters();\n      }\n      return result;\n    }\n  };\n\n  var currentEventId = function () {\n    return rootEvent ? rootEvent.id : undefined;\n  };\n\n  var wrappedSubscribe = function (obs, sink) {\n    var unsubd = false;\n    var shouldUnsub = false;\n    var doUnsub = function () {\n      shouldUnsub = true;\n      return shouldUnsub;\n    };\n    var unsub = function () {\n      unsubd = true;\n      return doUnsub();\n    };\n    doUnsub = obs.dispatcher.subscribe(function (event) {\n      return afterTransaction(obs, function () {\n        if (!unsubd) {\n          var reply = sink(event);\n          if (reply === Bacon.noMore) {\n            return unsub();\n          }\n        }\n      });\n    });\n    if (shouldUnsub) {\n      doUnsub();\n    }\n    return unsub;\n  };\n\n  var hasWaiters = function () {\n    return waiterObs.length > 0;\n  };\n\n  return { whenDoneWith: whenDoneWith, hasWaiters: hasWaiters, inTransaction: inTransaction, currentEventId: currentEventId, wrappedSubscribe: wrappedSubscribe, afterTransaction: afterTransaction };\n})();\n\nfunction Source(obs, sync) {\n  var lazy = arguments.length <= 2 || arguments[2] === undefined ? false : arguments[2];\n\n  this.obs = obs;\n  this.sync = sync;\n  this.lazy = lazy;\n  this.queue = [];\n}\n\nextend(Source.prototype, {\n  _isSource: true,\n\n  subscribe: function (sink) {\n    return this.obs.dispatcher.subscribe(sink);\n  },\n  toString: function () {\n    return this.obs.toString();\n  },\n  markEnded: function () {\n    this.ended = true;\n    return true;\n  },\n  consume: function () {\n    if (this.lazy) {\n      return { value: _.always(this.queue[0]) };\n    } else {\n      return this.queue[0];\n    }\n  },\n  push: function (x) {\n    this.queue = [x];\n    return [x];\n  },\n  mayHave: function () {\n    return true;\n  },\n  hasAtLeast: function () {\n    return this.queue.length;\n  },\n  flatten: true\n});\n\nfunction ConsumingSource() {\n  Source.apply(this, arguments);\n}\n\ninherit(ConsumingSource, Source);\nextend(ConsumingSource.prototype, {\n  consume: function () {\n    return this.queue.shift();\n  },\n  push: function (x) {\n    return this.queue.push(x);\n  },\n  mayHave: function (c) {\n    return !this.ended || this.queue.length >= c;\n  },\n  hasAtLeast: function (c) {\n    return this.queue.length >= c;\n  },\n  flatten: false\n});\n\nfunction BufferingSource(obs) {\n  Source.call(this, obs, true);\n}\n\ninherit(BufferingSource, Source);\nextend(BufferingSource.prototype, {\n  consume: function () {\n    var values = this.queue;\n    this.queue = [];\n    return {\n      value: function () {\n        return values;\n      }\n    };\n  },\n  push: function (x) {\n    return this.queue.push(x.value());\n  },\n  hasAtLeast: function () {\n    return true;\n  }\n});\n\nSource.isTrigger = function (s) {\n  if (s != null ? s._isSource : void 0) {\n    return s.sync;\n  } else {\n    return s != null ? s._isEventStream : void 0;\n  }\n};\n\nSource.fromObservable = function (s) {\n  if (s != null ? s._isSource : void 0) {\n    return s;\n  } else if (s != null ? s._isProperty : void 0) {\n    return new Source(s, false);\n  } else {\n    return new ConsumingSource(s, true);\n  }\n};\n\nfunction Desc(context, method, args) {\n  this.context = context;\n  this.method = method;\n  this.args = args;\n}\n\nextend(Desc.prototype, {\n  _isDesc: true,\n  deps: function () {\n    if (!this.cached) {\n      this.cached = findDeps([this.context].concat(this.args));\n    }\n    return this.cached;\n  },\n  toString: function () {\n    return _.toString(this.context) + \".\" + _.toString(this.method) + \"(\" + _.map(_.toString, this.args) + \")\";\n  }\n});\n\nvar describe = function (context, method) {\n  var ref = context || method;\n  if (ref && ref._isDesc) {\n    return context || method;\n  } else {\n    for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n      args[_key - 2] = arguments[_key];\n    }\n\n    return new Desc(context, method, args);\n  }\n};\n\nvar withDesc = function (desc, obs) {\n  obs.desc = desc;\n  return obs;\n};\n\nvar findDeps = function (x) {\n  if (isArray(x)) {\n    return _.flatMap(findDeps, x);\n  } else if (isObservable(x)) {\n    return [x];\n  } else if (typeof x !== \"undefined\" && x !== null ? x._isSource : undefined) {\n    return [x.obs];\n  } else {\n    return [];\n  }\n};\n\nBacon.Desc = Desc;\nBacon.Desc.empty = new Bacon.Desc(\"\", \"\", []);\n\nvar withMethodCallSupport = function (wrapped) {\n  return function (f) {\n    for (var _len2 = arguments.length, args = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      args[_key2 - 1] = arguments[_key2];\n    }\n\n    if (typeof f === \"object\" && args.length) {\n      var context = f;\n      var methodName = args[0];\n      f = function () {\n        return context[methodName].apply(context, arguments);\n      };\n      args = args.slice(1);\n    }\n    return wrapped.apply(undefined, [f].concat(args));\n  };\n};\n\nvar makeFunctionArgs = function (args) {\n  args = Array.prototype.slice.call(args);\n  return makeFunction_.apply(undefined, args);\n};\n\nvar partiallyApplied = function (f, applied) {\n  return function () {\n    for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n\n    return f.apply(undefined, applied.concat(args));\n  };\n};\n\nvar toSimpleExtractor = function (args) {\n  return function (key) {\n    return function (value) {\n      if (!(typeof value !== \"undefined\" && value !== null)) {\n        return;\n      } else {\n        var fieldValue = value[key];\n        if (_.isFunction(fieldValue)) {\n          return fieldValue.apply(value, args);\n        } else {\n          return fieldValue;\n        }\n      }\n    };\n  };\n};\n\nvar toFieldExtractor = function (f, args) {\n  var parts = f.slice(1).split(\".\");\n  var partFuncs = _.map(toSimpleExtractor(args), parts);\n  return function (value) {\n    for (var i = 0, f; i < partFuncs.length; i++) {\n      f = partFuncs[i];\n      value = f(value);\n    }\n    return value;\n  };\n};\n\nvar isFieldKey = function (f) {\n  return typeof f === \"string\" && f.length > 1 && f.charAt(0) === \".\";\n};\n\nvar makeFunction_ = withMethodCallSupport(function (f) {\n  for (var _len4 = arguments.length, args = Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n    args[_key4 - 1] = arguments[_key4];\n  }\n\n  if (_.isFunction(f)) {\n    if (args.length) {\n      return partiallyApplied(f, args);\n    } else {\n      return f;\n    }\n  } else if (isFieldKey(f)) {\n    return toFieldExtractor(f, args);\n  } else {\n    return _.always(f);\n  }\n});\n\nvar makeFunction = function (f, args) {\n  return makeFunction_.apply(undefined, [f].concat(args));\n};\n\nvar convertArgsToFunction = function (obs, f, args, method) {\n  if (typeof f !== \"undefined\" && f !== null ? f._isProperty : undefined) {\n    var sampled = f.sampledBy(obs, function (p, s) {\n      return [p, s];\n    });\n    return method.call(sampled, function (_ref) {\n      var p = _ref[0];\n      var s = _ref[1];\n      return p;\n    }).map(function (_ref2) {\n      var p = _ref2[0];\n      var s = _ref2[1];\n      return s;\n    });\n  } else {\n    f = makeFunction(f, args);\n    return method.call(obs, f);\n  }\n};\n\nvar toCombinator = function (f) {\n  if (_.isFunction(f)) {\n    return f;\n  } else if (isFieldKey(f)) {\n    var key = toFieldKey(f);\n    return function (left, right) {\n      return left[key](right);\n    };\n  } else {\n    throw new Exception(\"not a function or a field key: \" + f);\n  }\n};\n\nvar toFieldKey = function (f) {\n  return f.slice(1);\n};\n\nfunction Some(value) {\n  this.value = value;\n}\n\nextend(Some.prototype, {\n  _isSome: true,\n  getOrElse: function () {\n    return this.value;\n  },\n  get: function () {\n    return this.value;\n  },\n  filter: function (f) {\n    if (f(this.value)) {\n      return new Some(this.value);\n    } else {\n      return None;\n    }\n  },\n  map: function (f) {\n    return new Some(f(this.value));\n  },\n  forEach: function (f) {\n    return f(this.value);\n  },\n  isDefined: true,\n  toArray: function () {\n    return [this.value];\n  },\n  inspect: function () {\n    return \"Some(\" + this.value + \")\";\n  },\n  toString: function () {\n    return this.inspect();\n  }\n});\n\nvar None = {\n  _isNone: true,\n  getOrElse: function (value) {\n    return value;\n  },\n  filter: function () {\n    return None;\n  },\n  map: function () {\n    return None;\n  },\n  forEach: function () {},\n  isDefined: false,\n  toArray: function () {\n    return [];\n  },\n  inspect: function () {\n    return \"None\";\n  },\n  toString: function () {\n    return this.inspect();\n  }\n};\n\nvar toOption = function (v) {\n  if ((typeof v !== \"undefined\" && v !== null ? v._isSome : undefined) || (typeof v !== \"undefined\" && v !== null ? v._isNone : undefined)) {\n    return v;\n  } else {\n    return new Some(v);\n  }\n};\n\nBacon.noMore = \"<no-more>\";\nBacon.more = \"<more>\";\n\nvar eventIdCounter = 0;\n\nfunction Event() {\n  this.id = ++eventIdCounter;\n}\n\nEvent.prototype._isEvent = true;\nEvent.prototype.isEvent = function () {\n  return true;\n};\nEvent.prototype.isEnd = function () {\n  return false;\n};\nEvent.prototype.isInitial = function () {\n  return false;\n};\nEvent.prototype.isNext = function () {\n  return false;\n};\nEvent.prototype.isError = function () {\n  return false;\n};\nEvent.prototype.hasValue = function () {\n  return false;\n};\nEvent.prototype.filter = function () {\n  return true;\n};\nEvent.prototype.inspect = function () {\n  return this.toString();\n};\nEvent.prototype.log = function () {\n  return this.toString();\n};\n\nfunction Next(valueF, eager) {\n  if (!(this instanceof Next)) {\n    return new Next(valueF, eager);\n  }\n\n  Event.call(this);\n\n  if (!eager && _.isFunction(valueF) || (valueF != null ? valueF._isNext : void 0)) {\n    this.valueF = valueF;\n    this.valueInternal = void 0;\n  } else {\n    this.valueF = void 0;\n    this.valueInternal = valueF;\n  }\n}\n\ninherit(Next, Event);\n\nNext.prototype.isNext = function () {\n  return true;\n};\nNext.prototype.hasValue = function () {\n  return true;\n};\nNext.prototype.value = function () {\n  var ref;\n  if ((ref = this.valueF) != null ? ref._isNext : void 0) {\n    this.valueInternal = this.valueF.value();\n    this.valueF = void 0;\n  } else if (this.valueF) {\n    this.valueInternal = this.valueF();\n    this.valueF = void 0;\n  }\n  return this.valueInternal;\n};\n\nNext.prototype.fmap = function (f) {\n  var event, value;\n  if (this.valueInternal) {\n    value = this.valueInternal;\n    return this.apply(function () {\n      return f(value);\n    });\n  } else {\n    event = this;\n    return this.apply(function () {\n      return f(event.value());\n    });\n  }\n};\n\nNext.prototype.apply = function (value) {\n  return new Next(value);\n};\nNext.prototype.filter = function (f) {\n  return f(this.value());\n};\nNext.prototype.toString = function () {\n  return _.toString(this.value());\n};\nNext.prototype.log = function () {\n  return this.value();\n};\nNext.prototype._isNext = true;\n\nfunction Initial(valueF, eager) {\n  if (!(this instanceof Initial)) {\n    return new Initial(valueF, eager);\n  }\n  Next.call(this, valueF, eager);\n}\n\ninherit(Initial, Next);\nInitial.prototype._isInitial = true;\nInitial.prototype.isInitial = function () {\n  return true;\n};\nInitial.prototype.isNext = function () {\n  return false;\n};\nInitial.prototype.apply = function (value) {\n  return new Initial(value);\n};\nInitial.prototype.toNext = function () {\n  return new Next(this);\n};\n\nfunction End() {\n  if (!(this instanceof End)) {\n    return new End();\n  }\n  Event.call(this);\n}\n\ninherit(End, Event);\nEnd.prototype.isEnd = function () {\n  return true;\n};\nEnd.prototype.fmap = function () {\n  return this;\n};\nEnd.prototype.apply = function () {\n  return this;\n};\nEnd.prototype.toString = function () {\n  return \"<end>\";\n};\n\nfunction Error(error) {\n  if (!(this instanceof Error)) {\n    return new Error(error);\n  }\n  this.error = error;\n  Event.call(this);\n}\n\ninherit(Error, Event);\nError.prototype.isError = function () {\n  return true;\n};\nError.prototype.fmap = function () {\n  return this;\n};\nError.prototype.apply = function () {\n  return this;\n};\nError.prototype.toString = function () {\n  return \"<error> \" + _.toString(this.error);\n};\n\nBacon.Event = Event;\nBacon.Initial = Initial;\nBacon.Next = Next;\nBacon.End = End;\nBacon.Error = Error;\n\nvar initialEvent = function (value) {\n  return new Initial(value, true);\n};\nvar nextEvent = function (value) {\n  return new Next(value, true);\n};\nvar endEvent = function () {\n  return new End();\n};\nvar toEvent = function (x) {\n  if (x && x._isEvent) {\n    return x;\n  } else {\n    return nextEvent(x);\n  }\n};\n\nvar idCounter = 0;\nvar registerObs = function () {};\n\nfunction Observable(desc) {\n  this.desc = desc;\n  this.id = ++idCounter;\n  this.initialDesc = this.desc;\n}\n\nextend(Observable.prototype, {\n  _isObservable: true,\n\n  subscribe: function (sink) {\n    return UpdateBarrier.wrappedSubscribe(this, sink);\n  },\n\n  subscribeInternal: function (sink) {\n    return this.dispatcher.subscribe(sink);\n  },\n\n  onValue: function () {\n    var f = makeFunctionArgs(arguments);\n    return this.subscribe(function (event) {\n      if (event.hasValue()) {\n        return f(event.value());\n      }\n    });\n  },\n\n  onValues: function (f) {\n    return this.onValue(function (args) {\n      return f.apply(undefined, args);\n    });\n  },\n\n  onError: function () {\n    var f = makeFunctionArgs(arguments);\n    return this.subscribe(function (event) {\n      if (event.isError()) {\n        return f(event.error);\n      }\n    });\n  },\n\n  onEnd: function () {\n    var f = makeFunctionArgs(arguments);\n    return this.subscribe(function (event) {\n      if (event.isEnd()) {\n        return f();\n      }\n    });\n  },\n\n  name: function (name) {\n    this._name = name;\n    return this;\n  },\n\n  withDescription: function () {\n    this.desc = describe.apply(undefined, arguments);\n    return this;\n  },\n\n  toString: function () {\n    if (this._name) {\n      return this._name;\n    } else {\n      return this.desc.toString();\n    }\n  },\n\n  deps: function () {\n    return this.desc.deps();\n  },\n\n  internalDeps: function () {\n    return this.initialDesc.deps();\n  }\n});\n\nObservable.prototype.assign = Observable.prototype.onValue;\nObservable.prototype.forEach = Observable.prototype.onValue;\nObservable.prototype.inspect = Observable.prototype.toString;\n\nBacon.Observable = Observable;\n\nfunction CompositeUnsubscribe() {\n  var ss = arguments.length <= 0 || arguments[0] === undefined ? [] : arguments[0];\n\n  this.unsubscribe = _.bind(this.unsubscribe, this);\n  this.unsubscribed = false;\n  this.subscriptions = [];\n  this.starting = [];\n  for (var i = 0, s; i < ss.length; i++) {\n    s = ss[i];\n    this.add(s);\n  }\n}\n\nextend(CompositeUnsubscribe.prototype, {\n  add: function (subscription) {\n    var _this2 = this;\n\n    if (this.unsubscribed) {\n      return;\n    }\n    var ended = false;\n    var unsub = nop;\n    this.starting.push(subscription);\n    var unsubMe = function () {\n      if (_this2.unsubscribed) {\n        return;\n      }\n      ended = true;\n      _this2.remove(unsub);\n      return _.remove(subscription, _this2.starting);\n    };\n    unsub = subscription(this.unsubscribe, unsubMe);\n    if (!(this.unsubscribed || ended)) {\n      this.subscriptions.push(unsub);\n    } else {\n      unsub();\n    }\n    _.remove(subscription, this.starting);\n    return unsub;\n  },\n\n  remove: function (unsub) {\n    if (this.unsubscribed) {\n      return;\n    }\n    if (_.remove(unsub, this.subscriptions) !== undefined) {\n      return unsub();\n    }\n  },\n\n  unsubscribe: function () {\n    if (this.unsubscribed) {\n      return;\n    }\n    this.unsubscribed = true;\n    var iterable = this.subscriptions;\n    for (var i = 0; i < iterable.length; i++) {\n      iterable[i]();\n    }\n    this.subscriptions = [];\n    this.starting = [];\n    return [];\n  },\n\n  count: function () {\n    if (this.unsubscribed) {\n      return 0;\n    }\n    return this.subscriptions.length + this.starting.length;\n  },\n\n  empty: function () {\n    return this.count() === 0;\n  }\n});\n\nBacon.CompositeUnsubscribe = CompositeUnsubscribe;\n\nfunction Dispatcher(_subscribe, _handleEvent) {\n  this._subscribe = _subscribe;\n  this._handleEvent = _handleEvent;\n  this.subscribe = _.bind(this.subscribe, this);\n  this.handleEvent = _.bind(this.handleEvent, this);\n  this.pushing = false;\n  this.ended = false;\n  this.prevError = undefined;\n  this.unsubSrc = undefined;\n  this.subscriptions = [];\n  this.queue = [];\n}\n\nDispatcher.prototype.hasSubscribers = function () {\n  return this.subscriptions.length > 0;\n};\n\nDispatcher.prototype.removeSub = function (subscription) {\n  this.subscriptions = _.without(subscription, this.subscriptions);\n  return this.subscriptions;\n};\n\nDispatcher.prototype.push = function (event) {\n  if (event.isEnd()) {\n    this.ended = true;\n  }\n  return UpdateBarrier.inTransaction(event, this, this.pushIt, [event]);\n};\n\nDispatcher.prototype.pushToSubscriptions = function (event) {\n  try {\n    var tmp = this.subscriptions;\n    var len = tmp.length;\n    for (var i = 0; i < len; i++) {\n      var sub = tmp[i];\n      var reply = sub.sink(event);\n      if (reply === Bacon.noMore || event.isEnd()) {\n        this.removeSub(sub);\n      }\n    }\n    return true;\n  } catch (error) {\n    this.pushing = false;\n    this.queue = [];\n    throw error;\n  }\n};\n\nDispatcher.prototype.pushIt = function (event) {\n  if (!this.pushing) {\n    if (event === this.prevError) {\n      return;\n    }\n    if (event.isError()) {\n      this.prevError = event;\n    }\n    this.pushing = true;\n    this.pushToSubscriptions(event);\n    this.pushing = false;\n    while (this.queue.length) {\n      event = this.queue.shift();\n      this.push(event);\n    }\n    if (this.hasSubscribers()) {\n      return Bacon.more;\n    } else {\n      this.unsubscribeFromSource();\n      return Bacon.noMore;\n    }\n  } else {\n    this.queue.push(event);\n    return Bacon.more;\n  }\n};\n\nDispatcher.prototype.handleEvent = function (event) {\n  if (this._handleEvent) {\n    return this._handleEvent(event);\n  } else {\n    return this.push(event);\n  }\n};\n\nDispatcher.prototype.unsubscribeFromSource = function () {\n  if (this.unsubSrc) {\n    this.unsubSrc();\n  }\n  this.unsubSrc = undefined;\n};\n\nDispatcher.prototype.subscribe = function (sink) {\n  var subscription;\n  if (this.ended) {\n    sink(endEvent());\n    return nop;\n  } else {\n    assertFunction(sink);\n    subscription = {\n      sink: sink\n    };\n    this.subscriptions.push(subscription);\n    if (this.subscriptions.length === 1) {\n      this.unsubSrc = this._subscribe(this.handleEvent);\n      assertFunction(this.unsubSrc);\n    }\n    return (function (_this) {\n      return function () {\n        _this.removeSub(subscription);\n        if (!_this.hasSubscribers()) {\n          return _this.unsubscribeFromSource();\n        }\n      };\n    })(this);\n  }\n};\n\nBacon.Dispatcher = Dispatcher;\n\nfunction EventStream(desc, subscribe, handler) {\n  if (!(this instanceof EventStream)) {\n    return new EventStream(desc, subscribe, handler);\n  }\n  if (_.isFunction(desc)) {\n    handler = subscribe;\n    subscribe = desc;\n    desc = Desc.empty;\n  }\n  Observable.call(this, desc);\n  assertFunction(subscribe);\n  this.dispatcher = new Dispatcher(subscribe, handler);\n  registerObs(this);\n}\n\ninherit(EventStream, Observable);\nextend(EventStream.prototype, {\n  _isEventStream: true,\n\n  toProperty: function (initValue_) {\n    var initValue = arguments.length === 0 ? None : toOption(function () {\n      return initValue_;\n    });\n    var disp = this.dispatcher;\n    var desc = new Bacon.Desc(this, \"toProperty\", [initValue_]);\n    return new Property(desc, function (sink) {\n      var initSent = false;\n      var subbed = false;\n      var unsub = nop;\n      var reply = Bacon.more;\n      var sendInit = function () {\n        if (!initSent) {\n          return initValue.forEach(function (value) {\n            initSent = true;\n            reply = sink(new Initial(value));\n            if (reply === Bacon.noMore) {\n              unsub();\n              unsub = nop;\n              return nop;\n            }\n          });\n        }\n      };\n\n      unsub = disp.subscribe(function (event) {\n        if (event.hasValue()) {\n          if (event.isInitial() && !subbed) {\n            initValue = new Some(function () {\n              return event.value();\n            });\n            return Bacon.more;\n          } else {\n            if (!event.isInitial()) {\n              sendInit();\n            }\n            initSent = true;\n            initValue = new Some(event);\n            return sink(event);\n          }\n        } else {\n          if (event.isEnd()) {\n            reply = sendInit();\n          }\n          if (reply !== Bacon.noMore) {\n            return sink(event);\n          }\n        }\n      });\n      subbed = true;\n      sendInit();\n      return unsub;\n    });\n  },\n\n  toEventStream: function () {\n    return this;\n  },\n\n  withHandler: function (handler) {\n    return new EventStream(new Bacon.Desc(this, \"withHandler\", [handler]), this.dispatcher.subscribe, handler);\n  }\n});\n\nBacon.EventStream = EventStream;\n\nBacon.never = function () {\n  return new EventStream(describe(Bacon, \"never\"), function (sink) {\n    sink(endEvent());\n    return nop;\n  });\n};\n\nBacon.when = function () {\n  if (arguments.length === 0) {\n    return Bacon.never();\n  }\n  var len = arguments.length;\n  var usage = \"when: expecting arguments in the form (Observable+,function)+\";\n\n  assert(usage, len % 2 === 0);\n  var sources = [];\n  var pats = [];\n  var i = 0;\n  var patterns = [];\n  while (i < len) {\n    patterns[i] = arguments[i];\n    patterns[i + 1] = arguments[i + 1];\n    var patSources = _.toArray(arguments[i]);\n    var f = constantToFunction(arguments[i + 1]);\n    var pat = { f: f, ixs: [] };\n    var triggerFound = false;\n    for (var j = 0, s; j < patSources.length; j++) {\n      s = patSources[j];\n      var index = _.indexOf(sources, s);\n      if (!triggerFound) {\n        triggerFound = Source.isTrigger(s);\n      }\n      if (index < 0) {\n        sources.push(s);\n        index = sources.length - 1;\n      }\n      for (var k = 0, ix; k < pat.ixs.length; k++) {\n        ix = pat.ixs[k];\n        if (ix.index === index) {\n          ix.count++;\n        }\n      }\n      pat.ixs.push({ index: index, count: 1 });\n    }\n\n    assert(\"At least one EventStream required\", triggerFound || !patSources.length);\n\n    if (patSources.length > 0) {\n      pats.push(pat);\n    }\n    i = i + 2;\n  }\n\n  if (!sources.length) {\n    return Bacon.never();\n  }\n\n  sources = _.map(Source.fromObservable, sources);\n  var needsBarrier = _.any(sources, function (s) {\n    return s.flatten;\n  }) && containsDuplicateDeps(_.map(function (s) {\n    return s.obs;\n  }, sources));\n\n  var desc = new Bacon.Desc(Bacon, \"when\", patterns);\n  var resultStream = new EventStream(desc, function (sink) {\n    var triggers = [];\n    var ends = false;\n    var match = function (p) {\n      for (var i1 = 0, i; i1 < p.ixs.length; i1++) {\n        i = p.ixs[i1];\n        if (!sources[i.index].hasAtLeast(i.count)) {\n          return false;\n        }\n      }\n      return true;\n    };\n    var cannotSync = function (source) {\n      return !source.sync || source.ended;\n    };\n    var cannotMatch = function (p) {\n      for (var i1 = 0, i; i1 < p.ixs.length; i1++) {\n        i = p.ixs[i1];\n        if (!sources[i.index].mayHave(i.count)) {\n          return true;\n        }\n      }\n    };\n    var nonFlattened = function (trigger) {\n      return !trigger.source.flatten;\n    };\n    var part = function (source) {\n      return function (unsubAll) {\n        var flushLater = function () {\n          return UpdateBarrier.whenDoneWith(resultStream, flush);\n        };\n        var flushWhileTriggers = function () {\n          if (triggers.length > 0) {\n            var reply = Bacon.more;\n            var trigger = triggers.pop();\n            for (var i1 = 0, p; i1 < pats.length; i1++) {\n              p = pats[i1];\n              if (match(p)) {\n                var events = (function () {\n                  var result = [];\n                  for (var i2 = 0, i; i2 < p.ixs.length; i2++) {\n                    i = p.ixs[i2];\n                    result.push(sources[i.index].consume());\n                  }\n                  return result;\n                })();\n                reply = sink(trigger.e.apply(function () {\n                  var _p;\n\n                  var values = (function () {\n                    var result = [];\n                    for (var i2 = 0, event; i2 < events.length; i2++) {\n                      event = events[i2];\n                      result.push(event.value());\n                    }\n                    return result;\n                  })();\n\n                  return (_p = p).f.apply(_p, values);\n                }));\n                if (triggers.length) {\n                  triggers = _.filter(nonFlattened, triggers);\n                }\n                if (reply === Bacon.noMore) {\n                  return reply;\n                } else {\n                  return flushWhileTriggers();\n                }\n              }\n            }\n          } else {\n            return Bacon.more;\n          }\n        };\n        var flush = function () {\n          var reply = flushWhileTriggers();\n          if (ends) {\n            if (_.all(sources, cannotSync) || _.all(pats, cannotMatch)) {\n              reply = Bacon.noMore;\n              sink(endEvent());\n            }\n          }\n          if (reply === Bacon.noMore) {\n            unsubAll();\n          }\n\n          return reply;\n        };\n        return source.subscribe(function (e) {\n          if (e.isEnd()) {\n            ends = true;\n            source.markEnded();\n            flushLater();\n          } else if (e.isError()) {\n            var reply = sink(e);\n          } else {\n            source.push(e);\n            if (source.sync) {\n              triggers.push({ source: source, e: e });\n              if (needsBarrier || UpdateBarrier.hasWaiters()) {\n                flushLater();\n              } else {\n                flush();\n              }\n            }\n          }\n          if (reply === Bacon.noMore) {\n            unsubAll();\n          }\n          return reply || Bacon.more;\n        });\n      };\n    };\n\n    return new Bacon.CompositeUnsubscribe((function () {\n      var result = [];\n      for (var i1 = 0, s; i1 < sources.length; i1++) {\n        s = sources[i1];\n        result.push(part(s));\n      }\n      return result;\n    })()).unsubscribe;\n  });\n  return resultStream;\n};\n\nvar containsDuplicateDeps = function (observables) {\n  var state = arguments.length <= 1 || arguments[1] === undefined ? [] : arguments[1];\n\n  var checkObservable = function (obs) {\n    if (_.contains(state, obs)) {\n      return true;\n    } else {\n      var deps = obs.internalDeps();\n      if (deps.length) {\n        state.push(obs);\n        return _.any(deps, checkObservable);\n      } else {\n        state.push(obs);\n        return false;\n      }\n    }\n  };\n\n  return _.any(observables, checkObservable);\n};\n\nvar constantToFunction = function (f) {\n  if (_.isFunction(f)) {\n    return f;\n  } else {\n    return _.always(f);\n  }\n};\n\nBacon.groupSimultaneous = function () {\n  for (var _len5 = arguments.length, streams = Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n    streams[_key5] = arguments[_key5];\n  }\n\n  if (streams.length === 1 && isArray(streams[0])) {\n    streams = streams[0];\n  }\n  var sources = (function () {\n    var result = [];\n    for (var i = 0, s; i < streams.length; i++) {\n      s = streams[i];\n      result.push(new BufferingSource(s));\n    }\n    return result;\n  })();\n  return withDesc(new Bacon.Desc(Bacon, \"groupSimultaneous\", streams), Bacon.when(sources, function () {\n    for (var _len6 = arguments.length, xs = Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n      xs[_key6] = arguments[_key6];\n    }\n\n    return xs;\n  }));\n};\n\nfunction PropertyDispatcher(property, subscribe, handleEvent) {\n  Dispatcher.call(this, subscribe, handleEvent);\n  this.property = property;\n  this.subscribe = _.bind(this.subscribe, this);\n  this.current = None;\n  this.currentValueRootId = undefined;\n  this.propertyEnded = false;\n}\n\ninherit(PropertyDispatcher, Dispatcher);\nextend(PropertyDispatcher.prototype, {\n  push: function (event) {\n    if (event.isEnd()) {\n      this.propertyEnded = true;\n    }\n    if (event.hasValue()) {\n      this.current = new Some(event);\n      this.currentValueRootId = UpdateBarrier.currentEventId();\n    }\n    return Dispatcher.prototype.push.call(this, event);\n  },\n\n  maybeSubSource: function (sink, reply) {\n    if (reply === Bacon.noMore) {\n      return nop;\n    } else if (this.propertyEnded) {\n      sink(endEvent());\n      return nop;\n    } else {\n      return Dispatcher.prototype.subscribe.call(this, sink);\n    }\n  },\n\n  subscribe: function (sink) {\n    var _this3 = this;\n\n    var initSent = false;\n\n    var reply = Bacon.more;\n\n    if (this.current.isDefined && (this.hasSubscribers() || this.propertyEnded)) {\n      var dispatchingId = UpdateBarrier.currentEventId();\n      var valId = this.currentValueRootId;\n      if (!this.propertyEnded && valId && dispatchingId && dispatchingId !== valId) {\n        UpdateBarrier.whenDoneWith(this.property, function () {\n          if (_this3.currentValueRootId === valId) {\n            return sink(initialEvent(_this3.current.get().value()));\n          }\n        });\n\n        return this.maybeSubSource(sink, reply);\n      } else {\n        UpdateBarrier.inTransaction(undefined, this, function () {\n          reply = sink(initialEvent(this.current.get().value()));\n          return reply;\n        }, []);\n        return this.maybeSubSource(sink, reply);\n      }\n    } else {\n      return this.maybeSubSource(sink, reply);\n    }\n  }\n});\n\nfunction Property(desc, subscribe, handler) {\n  Observable.call(this, desc);\n  assertFunction(subscribe);\n  this.dispatcher = new PropertyDispatcher(this, subscribe, handler);\n  registerObs(this);\n}\n\ninherit(Property, Observable);\nextend(Property.prototype, {\n  _isProperty: true,\n\n  changes: function () {\n    var _this4 = this;\n\n    return new EventStream(new Bacon.Desc(this, \"changes\", []), function (sink) {\n      return _this4.dispatcher.subscribe(function (event) {\n        if (!event.isInitial()) {\n          return sink(event);\n        }\n      });\n    });\n  },\n\n  withHandler: function (handler) {\n    return new Property(new Bacon.Desc(this, \"withHandler\", [handler]), this.dispatcher.subscribe, handler);\n  },\n\n  toProperty: function () {\n    assertNoArguments(arguments);\n    return this;\n  },\n\n  toEventStream: function () {\n    var _this5 = this;\n\n    return new EventStream(new Bacon.Desc(this, \"toEventStream\", []), function (sink) {\n      return _this5.dispatcher.subscribe(function (event) {\n        if (event.isInitial()) {\n          event = event.toNext();\n        }\n        return sink(event);\n      });\n    });\n  }\n});\n\nBacon.Property = Property;\n\nBacon.constant = function (value) {\n  return new Property(new Bacon.Desc(Bacon, \"constant\", [value]), function (sink) {\n    sink(initialEvent(value));\n    sink(endEvent());\n    return nop;\n  });\n};\n\nBacon.fromBinder = function (binder) {\n  var eventTransformer = arguments.length <= 1 || arguments[1] === undefined ? _.id : arguments[1];\n\n  var desc = new Bacon.Desc(Bacon, \"fromBinder\", [binder, eventTransformer]);\n  return new EventStream(desc, function (sink) {\n    var unbound = false;\n    var shouldUnbind = false;\n    var unbind = function () {\n      if (!unbound) {\n        if (typeof unbinder !== \"undefined\" && unbinder !== null) {\n          unbinder();\n          return unbound = true;\n        } else {\n          return shouldUnbind = true;\n        }\n      }\n    };\n    var unbinder = binder(function () {\n      var ref;\n\n      for (var _len7 = arguments.length, args = Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n        args[_key7] = arguments[_key7];\n      }\n\n      var value = eventTransformer.apply(this, args);\n      if (!(isArray(value) && ((ref = _.last(value)) != null ? ref._isEvent : undefined))) {\n        value = [value];\n      }\n      var reply = Bacon.more;\n      for (var i = 0, event; i < value.length; i++) {\n        event = value[i];\n        reply = sink(event = toEvent(event));\n        if (reply === Bacon.noMore || event.isEnd()) {\n          unbind();\n          return reply;\n        }\n      }\n      return reply;\n    });\n    if (shouldUnbind) {\n      unbind();\n    }\n    return unbind;\n  });\n};\n\nBacon.Observable.prototype.map = function (p) {\n  for (var _len8 = arguments.length, args = Array(_len8 > 1 ? _len8 - 1 : 0), _key8 = 1; _key8 < _len8; _key8++) {\n    args[_key8 - 1] = arguments[_key8];\n  }\n\n  return convertArgsToFunction(this, p, args, function (f) {\n    return withDesc(new Bacon.Desc(this, \"map\", [f]), this.withHandler(function (event) {\n      return this.push(event.fmap(f));\n    }));\n  });\n};\n\nvar argumentsToObservables = function (args) {\n  if (isArray(args[0])) {\n    return args[0];\n  } else {\n    return Array.prototype.slice.call(args);\n  }\n};\n\nvar argumentsToObservablesAndFunction = function (args) {\n  if (_.isFunction(args[0])) {\n    return [argumentsToObservables(Array.prototype.slice.call(args, 1)), args[0]];\n  } else {\n    return [argumentsToObservables(Array.prototype.slice.call(args, 0, args.length - 1)), _.last(args)];\n  }\n};\n\nBacon.combineAsArray = function () {\n  var streams = argumentsToObservables(arguments);\n  if (streams.length) {\n    var sources = [];\n    for (var i = 0; i < streams.length; i++) {\n      var stream = isObservable(streams[i]) ? streams[i] : Bacon.constant(streams[i]);\n      sources.push(new Source(stream, true));\n    }\n    return withDesc(new Bacon.Desc(Bacon, \"combineAsArray\", streams), Bacon.when(sources, function () {\n      for (var _len9 = arguments.length, xs = Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {\n        xs[_key9] = arguments[_key9];\n      }\n\n      return xs;\n    }).toProperty());\n  } else {\n    return Bacon.constant([]);\n  }\n};\n\nBacon.onValues = function () {\n  return Bacon.combineAsArray(Array.prototype.slice.call(arguments, 0, arguments.length - 1)).onValues(arguments[arguments.length - 1]);\n};\n\nBacon.combineWith = function () {\n  var _argumentsToObservablesAndFunction = argumentsToObservablesAndFunction(arguments);\n\n  var streams = _argumentsToObservablesAndFunction[0];\n  var f = _argumentsToObservablesAndFunction[1];\n\n  var desc = new Bacon.Desc(Bacon, \"combineWith\", [f].concat(streams));\n  return withDesc(desc, Bacon.combineAsArray(streams).map(function (values) {\n    return f.apply(undefined, values);\n  }));\n};\n\nBacon.Observable.prototype.combine = function (other, f) {\n  var combinator = toCombinator(f);\n  var desc = new Bacon.Desc(this, \"combine\", [other, f]);\n  return withDesc(desc, Bacon.combineAsArray(this, other).map(function (values) {\n    return combinator(values[0], values[1]);\n  }));\n};\n\nBacon.Observable.prototype.withStateMachine = function (initState, f) {\n  var state = initState;\n  var desc = new Bacon.Desc(this, \"withStateMachine\", [initState, f]);\n  return withDesc(desc, this.withHandler(function (event) {\n    var fromF = f(state, event);\n    var newState = fromF[0];\n    var outputs = fromF[1];\n\n    state = newState;\n    var reply = Bacon.more;\n    for (var i = 0, output; i < outputs.length; i++) {\n      output = outputs[i];\n      reply = this.push(output);\n      if (reply === Bacon.noMore) {\n        return reply;\n      }\n    }\n    return reply;\n  }));\n};\n\nvar equals = function (a, b) {\n  return a === b;\n};\n\nvar isNone = function (object) {\n  return typeof object !== \"undefined\" && object !== null ? object._isNone : false;\n};\n\nBacon.Observable.prototype.skipDuplicates = function () {\n  var isEqual = arguments.length <= 0 || arguments[0] === undefined ? equals : arguments[0];\n\n  var desc = new Bacon.Desc(this, \"skipDuplicates\", []);\n  return withDesc(desc, this.withStateMachine(None, function (prev, event) {\n    if (!event.hasValue()) {\n      return [prev, [event]];\n    } else if (event.isInitial() || isNone(prev) || !isEqual(prev.get(), event.value())) {\n      return [new Some(event.value()), [event]];\n    } else {\n      return [prev, []];\n    }\n  }));\n};\n\nBacon.Observable.prototype.awaiting = function (other) {\n  var desc = new Bacon.Desc(this, \"awaiting\", [other]);\n  return withDesc(desc, Bacon.groupSimultaneous(this, other).map(function (values) {\n    return values[1].length === 0;\n  }).toProperty(false).skipDuplicates());\n};\n\nBacon.Observable.prototype.not = function () {\n  return withDesc(new Bacon.Desc(this, \"not\", []), this.map(function (x) {\n    return !x;\n  }));\n};\n\nBacon.Property.prototype.and = function (other) {\n  return withDesc(new Bacon.Desc(this, \"and\", [other]), this.combine(other, function (x, y) {\n    return x && y;\n  }));\n};\n\nBacon.Property.prototype.or = function (other) {\n  return withDesc(new Bacon.Desc(this, \"or\", [other]), this.combine(other, function (x, y) {\n    return x || y;\n  }));\n};\n\nBacon.scheduler = {\n  setTimeout: function (f, d) {\n    return setTimeout(f, d);\n  },\n  setInterval: function (f, i) {\n    return setInterval(f, i);\n  },\n  clearInterval: function (id) {\n    return clearInterval(id);\n  },\n  clearTimeout: function (id) {\n    return clearTimeout(id);\n  },\n  now: function () {\n    return new Date().getTime();\n  }\n};\n\nBacon.EventStream.prototype.bufferWithTime = function (delay) {\n  return withDesc(new Bacon.Desc(this, \"bufferWithTime\", [delay]), this.bufferWithTimeOrCount(delay, Number.MAX_VALUE));\n};\n\nBacon.EventStream.prototype.bufferWithCount = function (count) {\n  return withDesc(new Bacon.Desc(this, \"bufferWithCount\", [count]), this.bufferWithTimeOrCount(undefined, count));\n};\n\nBacon.EventStream.prototype.bufferWithTimeOrCount = function (delay, count) {\n  var flushOrSchedule = function (buffer) {\n    if (buffer.values.length === count) {\n      return buffer.flush();\n    } else if (delay !== undefined) {\n      return buffer.schedule();\n    }\n  };\n  var desc = new Bacon.Desc(this, \"bufferWithTimeOrCount\", [delay, count]);\n  return withDesc(desc, this.buffer(delay, flushOrSchedule, flushOrSchedule));\n};\n\nBacon.EventStream.prototype.buffer = function (delay) {\n  var onInput = arguments.length <= 1 || arguments[1] === undefined ? nop : arguments[1];\n  var onFlush = arguments.length <= 2 || arguments[2] === undefined ? nop : arguments[2];\n\n  var buffer = {\n    scheduled: null,\n    end: undefined,\n    values: [],\n    flush: function () {\n      if (this.scheduled) {\n        Bacon.scheduler.clearTimeout(this.scheduled);\n        this.scheduled = null;\n      }\n      if (this.values.length > 0) {\n        var valuesToPush = this.values;\n        this.values = [];\n        var reply = this.push(nextEvent(valuesToPush));\n        if (this.end != null) {\n          return this.push(this.end);\n        } else if (reply !== Bacon.noMore) {\n          return onFlush(this);\n        }\n      } else {\n        if (this.end != null) {\n          return this.push(this.end);\n        }\n      }\n    },\n    schedule: function () {\n      var _this6 = this;\n\n      if (!this.scheduled) {\n        return this.scheduled = delay(function () {\n          return _this6.flush();\n        });\n      }\n    }\n  };\n  var reply = Bacon.more;\n  if (!_.isFunction(delay)) {\n    var delayMs = delay;\n    delay = function (f) {\n      return Bacon.scheduler.setTimeout(f, delayMs);\n    };\n  }\n  return withDesc(new Bacon.Desc(this, \"buffer\", []), this.withHandler(function (event) {\n    var _this7 = this;\n\n    buffer.push = function (event) {\n      return _this7.push(event);\n    };\n    if (event.isError()) {\n      reply = this.push(event);\n    } else if (event.isEnd()) {\n      buffer.end = event;\n      if (!buffer.scheduled) {\n        buffer.flush();\n      }\n    } else {\n      buffer.values.push(event.value());\n\n      onInput(buffer);\n    }\n    return reply;\n  }));\n};\n\nBacon.Observable.prototype.filter = function (f) {\n  assertObservableIsProperty(f);\n\n  for (var _len10 = arguments.length, args = Array(_len10 > 1 ? _len10 - 1 : 0), _key10 = 1; _key10 < _len10; _key10++) {\n    args[_key10 - 1] = arguments[_key10];\n  }\n\n  return convertArgsToFunction(this, f, args, function (f) {\n    return withDesc(new Bacon.Desc(this, \"filter\", [f]), this.withHandler(function (event) {\n      if (event.filter(f)) {\n        return this.push(event);\n      } else {\n        return Bacon.more;\n      }\n    }));\n  });\n};\n\nBacon.once = function (value) {\n  return new EventStream(new Desc(Bacon, \"once\", [value]), function (sink) {\n    sink(toEvent(value));\n    sink(endEvent());\n    return nop;\n  });\n};\n\nBacon.EventStream.prototype.concat = function (right) {\n  var left = this;\n  return new EventStream(new Bacon.Desc(left, \"concat\", [right]), function (sink) {\n    var unsubRight = nop;\n    var unsubLeft = left.dispatcher.subscribe(function (e) {\n      if (e.isEnd()) {\n        unsubRight = right.toEventStream().dispatcher.subscribe(sink);\n        return unsubRight;\n      } else {\n        return sink(e);\n      }\n    });\n    return function () {\n      return unsubLeft(), unsubRight();\n    };\n  });\n};\n\nBacon.Property.prototype.concat = function (right) {\n  return addPropertyInitValueToStream(this, this.changes().concat(right));\n};\n\nBacon.concatAll = function () {\n  var streams = argumentsToObservables(arguments);\n  if (streams.length) {\n    return withDesc(new Bacon.Desc(Bacon, \"concatAll\", streams), _.fold(_.tail(streams), _.head(streams).toEventStream(), function (a, b) {\n      return a.concat(b);\n    }));\n  } else {\n    return Bacon.never();\n  }\n};\n\nvar addPropertyInitValueToStream = function (property, stream) {\n  var justInitValue = new EventStream(describe(property, \"justInitValue\"), function (sink) {\n    var value = undefined;\n    var unsub = property.dispatcher.subscribe(function (event) {\n      if (!event.isEnd()) {\n        value = event;\n      }\n      return Bacon.noMore;\n    });\n    UpdateBarrier.whenDoneWith(justInitValue, function () {\n      if (typeof value !== \"undefined\" && value !== null) {\n        sink(value);\n      }\n      return sink(endEvent());\n    });\n    return unsub;\n  });\n  return justInitValue.concat(stream).toProperty();\n};\n\nBacon.Observable.prototype.flatMap = function () {\n  return flatMap_(this, makeSpawner(arguments));\n};\n\nBacon.Observable.prototype.flatMapFirst = function () {\n  return flatMap_(this, makeSpawner(arguments), true);\n};\n\nvar makeSpawner = function (args) {\n  if (args.length === 1 && isObservable(args[0])) {\n    return _.always(args[0]);\n  } else {\n    return makeFunctionArgs(args);\n  }\n};\n\nvar makeObservable = function (x) {\n  if (isObservable(x)) {\n    return x;\n  } else {\n    return Bacon.once(x);\n  }\n};\n\nvar flatMap_ = function (root, f, firstOnly, limit) {\n  var rootDep = [root];\n  var childDeps = [];\n  var desc = new Bacon.Desc(root, \"flatMap\" + (firstOnly ? \"First\" : \"\"), [f]);\n  var result = new EventStream(desc, function (sink) {\n    var composite = new CompositeUnsubscribe();\n    var queue = [];\n    var spawn = function (event) {\n      var child = makeObservable(f(event.value()));\n      childDeps.push(child);\n      return composite.add(function (unsubAll, unsubMe) {\n        return child.dispatcher.subscribe(function (event) {\n          if (event.isEnd()) {\n            _.remove(child, childDeps);\n            checkQueue();\n            checkEnd(unsubMe);\n            return Bacon.noMore;\n          } else {\n            if (typeof event !== \"undefined\" && event !== null ? event._isInitial : undefined) {\n              event = event.toNext();\n            }\n            var reply = sink(event);\n            if (reply === Bacon.noMore) {\n              unsubAll();\n            }\n            return reply;\n          }\n        });\n      });\n    };\n    var checkQueue = function () {\n      var event = queue.shift();\n      if (event) {\n        return spawn(event);\n      }\n    };\n    var checkEnd = function (unsub) {\n      unsub();\n      if (composite.empty()) {\n        return sink(endEvent());\n      }\n    };\n    composite.add(function (__, unsubRoot) {\n      return root.dispatcher.subscribe(function (event) {\n        if (event.isEnd()) {\n          return checkEnd(unsubRoot);\n        } else if (event.isError()) {\n          return sink(event);\n        } else if (firstOnly && composite.count() > 1) {\n          return Bacon.more;\n        } else {\n          if (composite.unsubscribed) {\n            return Bacon.noMore;\n          }\n          if (limit && composite.count() > limit) {\n            return queue.push(event);\n          } else {\n            return spawn(event);\n          }\n        }\n      });\n    });\n    return composite.unsubscribe;\n  });\n  result.internalDeps = function () {\n    if (childDeps.length) {\n      return rootDep.concat(childDeps);\n    } else {\n      return rootDep;\n    }\n  };\n  return result;\n};\n\nBacon.Observable.prototype.flatMapWithConcurrencyLimit = function (limit) {\n  for (var _len11 = arguments.length, args = Array(_len11 > 1 ? _len11 - 1 : 0), _key11 = 1; _key11 < _len11; _key11++) {\n    args[_key11 - 1] = arguments[_key11];\n  }\n\n  var desc = new Bacon.Desc(this, \"flatMapWithConcurrencyLimit\", [limit].concat(args));\n  return withDesc(desc, flatMap_(this, makeSpawner(args), false, limit));\n};\n\nBacon.Observable.prototype.flatMapConcat = function () {\n  var desc = new Bacon.Desc(this, \"flatMapConcat\", Array.prototype.slice.call(arguments, 0));\n  return withDesc(desc, this.flatMapWithConcurrencyLimit.apply(this, [1].concat(_slice.call(arguments))));\n};\n\nBacon.later = function (delay, value) {\n  return withDesc(new Bacon.Desc(Bacon, \"later\", [delay, value]), Bacon.fromBinder(function (sink) {\n    var sender = function () {\n      return sink([value, endEvent()]);\n    };\n    var id = Bacon.scheduler.setTimeout(sender, delay);\n    return function () {\n      return Bacon.scheduler.clearTimeout(id);\n    };\n  }));\n};\n\nBacon.Observable.prototype.bufferingThrottle = function (minimumInterval) {\n  var desc = new Bacon.Desc(this, \"bufferingThrottle\", [minimumInterval]);\n  return withDesc(desc, this.flatMapConcat(function (x) {\n    return Bacon.once(x).concat(Bacon.later(minimumInterval).filter(false));\n  }));\n};\n\nBacon.Property.prototype.bufferingThrottle = function () {\n  return Bacon.Observable.prototype.bufferingThrottle.apply(this, arguments).toProperty();\n};\n\nfunction Bus() {\n  if (!(this instanceof Bus)) {\n    return new Bus();\n  }\n\n  this.unsubAll = _.bind(this.unsubAll, this);\n  this.subscribeAll = _.bind(this.subscribeAll, this);\n  this.guardedSink = _.bind(this.guardedSink, this);\n\n  this.sink = undefined;\n  this.subscriptions = [];\n  this.ended = false;\n  EventStream.call(this, new Bacon.Desc(Bacon, \"Bus\", []), this.subscribeAll);\n}\n\ninherit(Bus, EventStream);\nextend(Bus.prototype, {\n  unsubAll: function () {\n    var iterable = this.subscriptions;\n    for (var i = 0, sub; i < iterable.length; i++) {\n      sub = iterable[i];\n      if (typeof sub.unsub === \"function\") {\n        sub.unsub();\n      }\n    }\n  },\n\n  subscribeAll: function (newSink) {\n    if (this.ended) {\n      newSink(endEvent());\n    } else {\n      this.sink = newSink;\n      var iterable = cloneArray(this.subscriptions);\n      for (var i = 0, subscription; i < iterable.length; i++) {\n        subscription = iterable[i];\n        this.subscribeInput(subscription);\n      }\n    }\n    return this.unsubAll;\n  },\n\n  guardedSink: function (input) {\n    var _this8 = this;\n\n    return function (event) {\n      if (event.isEnd()) {\n        _this8.unsubscribeInput(input);\n        return Bacon.noMore;\n      } else {\n        return _this8.sink(event);\n      }\n    };\n  },\n\n  subscribeInput: function (subscription) {\n    subscription.unsub = subscription.input.dispatcher.subscribe(this.guardedSink(subscription.input));\n    return subscription.unsub;\n  },\n\n  unsubscribeInput: function (input) {\n    var iterable = this.subscriptions;\n    for (var i = 0, sub; i < iterable.length; i++) {\n      sub = iterable[i];\n      if (sub.input === input) {\n        if (typeof sub.unsub === \"function\") {\n          sub.unsub();\n        }\n        this.subscriptions.splice(i, 1);\n        return;\n      }\n    }\n  },\n\n  plug: function (input) {\n    var _this9 = this;\n\n    assertObservable(input);\n    if (this.ended) {\n      return;\n    }\n    var sub = { input: input };\n    this.subscriptions.push(sub);\n    if (typeof this.sink !== \"undefined\") {\n      this.subscribeInput(sub);\n    }\n    return function () {\n      return _this9.unsubscribeInput(input);\n    };\n  },\n\n  end: function () {\n    this.ended = true;\n    this.unsubAll();\n    if (typeof this.sink === \"function\") {\n      return this.sink(endEvent());\n    }\n  },\n\n  push: function (value) {\n    if (!this.ended && typeof this.sink === \"function\") {\n      var rootPush = !this.pushing;\n      if (!rootPush) {\n        if (!this.pushQueue) this.pushQueue = [];\n        this.pushQueue.push(value);\n\n        return;\n      }\n      this.pushing = true;\n      try {\n        return this.sink(nextEvent(value));\n      } finally {\n        if (rootPush && this.pushQueue) {\n          var i = 0;\n          while (i < this.pushQueue.length) {\n            var value = this.pushQueue[i];\n            this.sink(nextEvent(value));\n            i++;\n          }\n          this.pushQueue = null;\n        }\n        this.pushing = false;\n      }\n    }\n  },\n\n  error: function (error) {\n    if (typeof this.sink === \"function\") {\n      return this.sink(new Error(error));\n    }\n  }\n});\n\nBacon.Bus = Bus;\n\nvar liftCallback = function (desc, wrapped) {\n  return withMethodCallSupport(function (f) {\n    var stream = partiallyApplied(wrapped, [function (values, callback) {\n      return f.apply(undefined, values.concat([callback]));\n    }]);\n\n    for (var _len12 = arguments.length, args = Array(_len12 > 1 ? _len12 - 1 : 0), _key12 = 1; _key12 < _len12; _key12++) {\n      args[_key12 - 1] = arguments[_key12];\n    }\n\n    return withDesc(new Bacon.Desc(Bacon, desc, [f].concat(args)), Bacon.combineAsArray(args).flatMap(stream));\n  });\n};\n\nBacon.fromCallback = liftCallback(\"fromCallback\", function (f) {\n  for (var _len13 = arguments.length, args = Array(_len13 > 1 ? _len13 - 1 : 0), _key13 = 1; _key13 < _len13; _key13++) {\n    args[_key13 - 1] = arguments[_key13];\n  }\n\n  return Bacon.fromBinder(function (handler) {\n    makeFunction(f, args)(handler);\n    return nop;\n  }, function (value) {\n    return [value, endEvent()];\n  });\n});\n\nBacon.fromNodeCallback = liftCallback(\"fromNodeCallback\", function (f) {\n  for (var _len14 = arguments.length, args = Array(_len14 > 1 ? _len14 - 1 : 0), _key14 = 1; _key14 < _len14; _key14++) {\n    args[_key14 - 1] = arguments[_key14];\n  }\n\n  return Bacon.fromBinder(function (handler) {\n    makeFunction(f, args)(handler);\n    return nop;\n  }, function (error, value) {\n    if (error) {\n      return [new Error(error), endEvent()];\n    }\n    return [value, endEvent()];\n  });\n});\n\nBacon.combineTemplate = function (template) {\n  function current(ctxStack) {\n    return ctxStack[ctxStack.length - 1];\n  }\n  function setValue(ctxStack, key, value) {\n    current(ctxStack)[key] = value;\n    return value;\n  }\n  function applyStreamValue(key, index) {\n    return function (ctxStack, values) {\n      setValue(ctxStack, key, values[index]);\n    };\n  }\n  function constantValue(key, value) {\n    return function (ctxStack) {\n      setValue(ctxStack, key, value);\n    };\n  }\n\n  function mkContext(template) {\n    return isArray(template) ? [] : {};\n  }\n\n  function pushContext(key, value) {\n    return function (ctxStack) {\n      var newContext = mkContext(value);\n      setValue(ctxStack, key, newContext);\n      ctxStack.push(newContext);\n    };\n  }\n\n  function containsObservables(value) {\n    if (isObservable(value)) {\n      return true;\n    } else if (value && (value.constructor == Object || value.constructor == Array)) {\n      for (var key in value) {\n        if (Object.prototype.hasOwnProperty.call(value, key)) {\n          var child = value[key];\n          if (containsObservables(child)) return true;\n        }\n      }\n    }\n  }\n\n  function compile(key, value) {\n    if (isObservable(value)) {\n      streams.push(value);\n      funcs.push(applyStreamValue(key, streams.length - 1));\n    } else if (containsObservables(value)) {\n      var popContext = function (ctxStack) {\n        ctxStack.pop();\n      };\n      funcs.push(pushContext(key, value));\n      compileTemplate(value);\n      funcs.push(popContext);\n    } else {\n      funcs.push(constantValue(key, value));\n    }\n  }\n\n  function combinator(values) {\n    var rootContext = mkContext(template);\n    var ctxStack = [rootContext];\n    for (var i = 0, f; i < funcs.length; i++) {\n      f = funcs[i];\n      f(ctxStack, values);\n    }\n    return rootContext;\n  }\n\n  function compileTemplate(template) {\n    _.each(template, compile);\n  }\n\n  var funcs = [];\n  var streams = [];\n\n  var resultProperty = containsObservables(template) ? (compileTemplate(template), Bacon.combineAsArray(streams).map(combinator)) : Bacon.constant(template);\n\n  return withDesc(new Bacon.Desc(Bacon, \"combineTemplate\", [template]), resultProperty);\n};\n\nBacon.Observable.prototype.mapEnd = function () {\n  var f = makeFunctionArgs(arguments);\n  return withDesc(new Bacon.Desc(this, \"mapEnd\", [f]), this.withHandler(function (event) {\n    if (event.isEnd()) {\n      this.push(nextEvent(f(event)));\n      this.push(endEvent());\n      return Bacon.noMore;\n    } else {\n      return this.push(event);\n    }\n  }));\n};\n\nBacon.Observable.prototype.skipErrors = function () {\n  return withDesc(new Bacon.Desc(this, \"skipErrors\", []), this.withHandler(function (event) {\n    if (event.isError()) {\n      return Bacon.more;\n    } else {\n      return this.push(event);\n    }\n  }));\n};\n\nBacon.EventStream.prototype.takeUntil = function (stopper) {\n  var endMarker = {};\n  return withDesc(new Bacon.Desc(this, \"takeUntil\", [stopper]), Bacon.groupSimultaneous(this.mapEnd(endMarker), stopper.skipErrors()).withHandler(function (event) {\n    if (!event.hasValue()) {\n      return this.push(event);\n    } else {\n      var _event$value = event.value();\n\n      var data = _event$value[0];\n      var stopper = _event$value[1];\n\n      if (stopper.length) {\n        return this.push(endEvent());\n      } else {\n        var reply = Bacon.more;\n        for (var i = 0, value; i < data.length; i++) {\n          value = data[i];\n          if (value === endMarker) {\n            reply = this.push(endEvent());\n          } else {\n            reply = this.push(nextEvent(value));\n          }\n        }\n        return reply;\n      }\n    }\n  }));\n};\n\nBacon.Property.prototype.takeUntil = function (stopper) {\n  var changes = this.changes().takeUntil(stopper);\n  return withDesc(new Bacon.Desc(this, \"takeUntil\", [stopper]), addPropertyInitValueToStream(this, changes));\n};\n\nBacon.Observable.prototype.flatMapLatest = function () {\n  var f = makeSpawner(arguments);\n  var stream = this.toEventStream();\n  return withDesc(new Bacon.Desc(this, \"flatMapLatest\", [f]), stream.flatMap(function (value) {\n    return makeObservable(f(value)).takeUntil(stream);\n  }));\n};\n\nBacon.Property.prototype.delayChanges = function (desc, f) {\n  return withDesc(desc, addPropertyInitValueToStream(this, f(this.changes())));\n};\n\nBacon.EventStream.prototype.delayChanges = function (desc, f) {\n  return withDesc(desc, f(this));\n};\n\nBacon.Observable.prototype.delay = function (delay) {\n  return this.delayChanges(new Bacon.Desc(this, \"delay\", [delay]), function (changes) {\n    return changes.flatMap(function (value) {\n      return Bacon.later(delay, value);\n    });\n  });\n};\n\nBacon.Observable.prototype.debounce = function (delay) {\n  return this.delayChanges(new Bacon.Desc(this, \"debounce\", [delay]), function (changes) {\n    return changes.flatMapLatest(function (value) {\n      return Bacon.later(delay, value);\n    });\n  });\n};\n\nBacon.Observable.prototype.debounceImmediate = function (delay) {\n  return this.delayChanges(new Bacon.Desc(this, \"debounceImmediate\", [delay]), function (changes) {\n    return changes.flatMapFirst(function (value) {\n      return Bacon.once(value).concat(Bacon.later(delay).filter(false));\n    });\n  });\n};\n\nBacon.Observable.prototype.decode = function (cases) {\n  return withDesc(new Bacon.Desc(this, \"decode\", [cases]), this.combine(Bacon.combineTemplate(cases), function (key, values) {\n    return values[key];\n  }));\n};\n\nBacon.Observable.prototype.scan = function (seed, f) {\n  var _this10 = this;\n\n  var resultProperty;\n  f = toCombinator(f);\n  var acc = toOption(seed);\n  var initHandled = false;\n  var subscribe = function (sink) {\n    var initSent = false;\n    var unsub = nop;\n    var reply = Bacon.more;\n    var sendInit = function () {\n      if (!initSent) {\n        return acc.forEach(function (value) {\n          initSent = initHandled = true;\n          reply = sink(new Initial(function () {\n            return value;\n          }));\n          if (reply === Bacon.noMore) {\n            unsub();\n            unsub = nop;\n            return unsub;\n          }\n        });\n      }\n    };\n    unsub = _this10.dispatcher.subscribe(function (event) {\n      if (event.hasValue()) {\n        if (initHandled && event.isInitial()) {\n          return Bacon.more;\n        } else {\n            if (!event.isInitial()) {\n              sendInit();\n            }\n            initSent = initHandled = true;\n            var prev = acc.getOrElse(undefined);\n            var next = f(prev, event.value());\n\n            acc = new Some(next);\n            return sink(event.apply(function () {\n              return next;\n            }));\n          }\n      } else {\n        if (event.isEnd()) {\n          reply = sendInit();\n        }\n        if (reply !== Bacon.noMore) {\n          return sink(event);\n        }\n      }\n    });\n    UpdateBarrier.whenDoneWith(resultProperty, sendInit);\n    return unsub;\n  };\n  resultProperty = new Property(new Bacon.Desc(this, \"scan\", [seed, f]), subscribe);\n  return resultProperty;\n};\n\nBacon.Observable.prototype.diff = function (start, f) {\n  f = toCombinator(f);\n  return withDesc(new Bacon.Desc(this, \"diff\", [start, f]), this.scan([start], function (prevTuple, next) {\n    return [next, f(prevTuple[0], next)];\n  }).filter(function (tuple) {\n    return tuple.length === 2;\n  }).map(function (tuple) {\n    return tuple[1];\n  }));\n};\n\nBacon.Observable.prototype.doAction = function () {\n  var f = makeFunctionArgs(arguments);\n  return withDesc(new Bacon.Desc(this, \"doAction\", [f]), this.withHandler(function (event) {\n    if (event.hasValue()) {\n      f(event.value());\n    }\n    return this.push(event);\n  }));\n};\n\nBacon.Observable.prototype.doEnd = function () {\n  var f = makeFunctionArgs(arguments);\n  return withDesc(new Bacon.Desc(this, \"doEnd\", [f]), this.withHandler(function (event) {\n    if (event.isEnd()) {\n      f();\n    }\n    return this.push(event);\n  }));\n};\n\nBacon.Observable.prototype.doError = function () {\n  var f = makeFunctionArgs(arguments);\n  return withDesc(new Bacon.Desc(this, \"doError\", [f]), this.withHandler(function (event) {\n    if (event.isError()) {\n      f(event.error);\n    }\n    return this.push(event);\n  }));\n};\n\nBacon.Observable.prototype.doLog = function () {\n  for (var _len15 = arguments.length, args = Array(_len15), _key15 = 0; _key15 < _len15; _key15++) {\n    args[_key15] = arguments[_key15];\n  }\n\n  return withDesc(new Bacon.Desc(this, \"doLog\", args), this.withHandler(function (event) {\n    if (typeof console !== \"undefined\" && console !== null && typeof console.log === \"function\") {\n      console.log.apply(console, args.concat([event.log()]));\n    }\n    return this.push(event);\n  }));\n};\n\nBacon.Observable.prototype.endOnError = function (f) {\n  if (!(typeof f !== \"undefined\" && f !== null)) {\n    f = true;\n  }\n\n  for (var _len16 = arguments.length, args = Array(_len16 > 1 ? _len16 - 1 : 0), _key16 = 1; _key16 < _len16; _key16++) {\n    args[_key16 - 1] = arguments[_key16];\n  }\n\n  return convertArgsToFunction(this, f, args, function (f) {\n    return withDesc(new Bacon.Desc(this, \"endOnError\", []), this.withHandler(function (event) {\n      if (event.isError() && f(event.error)) {\n        this.push(event);\n        return this.push(endEvent());\n      } else {\n        return this.push(event);\n      }\n    }));\n  });\n};\n\nObservable.prototype.errors = function () {\n  return withDesc(new Bacon.Desc(this, \"errors\", []), this.filter(function () {\n    return false;\n  }));\n};\n\nBacon.Observable.prototype.take = function (count) {\n  if (count <= 0) {\n    return Bacon.never();\n  }\n  return withDesc(new Bacon.Desc(this, \"take\", [count]), this.withHandler(function (event) {\n    if (!event.hasValue()) {\n      return this.push(event);\n    } else {\n      count--;\n      if (count > 0) {\n        return this.push(event);\n      } else {\n        if (count === 0) {\n          this.push(event);\n        }\n        this.push(endEvent());\n        return Bacon.noMore;\n      }\n    }\n  }));\n};\n\nBacon.Observable.prototype.first = function () {\n  return withDesc(new Bacon.Desc(this, \"first\", []), this.take(1));\n};\n\nBacon.Observable.prototype.mapError = function () {\n  var f = makeFunctionArgs(arguments);\n  return withDesc(new Bacon.Desc(this, \"mapError\", [f]), this.withHandler(function (event) {\n    if (event.isError()) {\n      return this.push(nextEvent(f(event.error)));\n    } else {\n      return this.push(event);\n    }\n  }));\n};\n\nBacon.Observable.prototype.flatMapError = function (fn) {\n  var desc = new Bacon.Desc(this, \"flatMapError\", [fn]);\n  return withDesc(desc, this.mapError(function (err) {\n    return new Error(err);\n  }).flatMap(function (x) {\n    if (x instanceof Error) {\n      return fn(x.error);\n    } else {\n      return Bacon.once(x);\n    }\n  }));\n};\n\nBacon.EventStream.prototype.flatScan = function (seed, f) {\n  var current = seed;\n  return this.flatMapConcat(function (next) {\n    return makeObservable(f(current, next)).doAction(function (updated) {\n      return current = updated;\n    });\n  }).toProperty(seed);\n};\n\nBacon.EventStream.prototype.sampledBy = function (sampler, combinator) {\n  return withDesc(new Bacon.Desc(this, \"sampledBy\", [sampler, combinator]), this.toProperty().sampledBy(sampler, combinator));\n};\n\nBacon.Property.prototype.sampledBy = function (sampler, combinator) {\n  var lazy = false;\n  if (typeof combinator !== \"undefined\" && combinator !== null) {\n    combinator = toCombinator(combinator);\n  } else {\n    lazy = true;\n    combinator = function (f) {\n      return f.value();\n    };\n  }\n  var thisSource = new Source(this, false, lazy);\n  var samplerSource = new Source(sampler, true, lazy);\n  var stream = Bacon.when([thisSource, samplerSource], combinator);\n  var result = sampler._isProperty ? stream.toProperty() : stream;\n  return withDesc(new Bacon.Desc(this, \"sampledBy\", [sampler, combinator]), result);\n};\n\nBacon.Property.prototype.sample = function (interval) {\n  return withDesc(new Bacon.Desc(this, \"sample\", [interval]), this.sampledBy(Bacon.interval(interval, {})));\n};\n\nBacon.Observable.prototype.map = function (p) {\n  if (p && p._isProperty) {\n    return p.sampledBy(this, former);\n  } else {\n    for (var _len17 = arguments.length, args = Array(_len17 > 1 ? _len17 - 1 : 0), _key17 = 1; _key17 < _len17; _key17++) {\n      args[_key17 - 1] = arguments[_key17];\n    }\n\n    return convertArgsToFunction(this, p, args, function (f) {\n      return withDesc(new Bacon.Desc(this, \"map\", [f]), this.withHandler(function (event) {\n        return this.push(event.fmap(f));\n      }));\n    });\n  }\n};\n\nBacon.Observable.prototype.fold = function (seed, f) {\n  return withDesc(new Bacon.Desc(this, \"fold\", [seed, f]), this.scan(seed, f).sampledBy(this.filter(false).mapEnd().toProperty()));\n};\n\nObservable.prototype.reduce = Observable.prototype.fold;\n\nvar eventMethods = [[\"addEventListener\", \"removeEventListener\"], [\"addListener\", \"removeListener\"], [\"on\", \"off\"], [\"bind\", \"unbind\"]];\n\nvar findHandlerMethods = function (target) {\n  var pair;\n  for (var i = 0; i < eventMethods.length; i++) {\n    pair = eventMethods[i];\n    var methodPair = [target[pair[0]], target[pair[1]]];\n    if (methodPair[0] && methodPair[1]) {\n      return methodPair;\n    }\n  }\n  for (var j = 0; j < eventMethods.length; j++) {\n    pair = eventMethods[j];\n    var addListener = target[pair[0]];\n    if (addListener) {\n      return [addListener, function () {}];\n    }\n  }\n  throw new Error(\"No suitable event methods in \" + target);\n};\n\nBacon.fromEventTarget = function (target, eventName, eventTransformer) {\n  var _findHandlerMethods = findHandlerMethods(target);\n\n  var sub = _findHandlerMethods[0];\n  var unsub = _findHandlerMethods[1];\n\n  var desc = new Bacon.Desc(Bacon, \"fromEvent\", [target, eventName]);\n  return withDesc(desc, Bacon.fromBinder(function (handler) {\n    sub.call(target, eventName, handler);\n    return function () {\n      return unsub.call(target, eventName, handler);\n    };\n  }, eventTransformer));\n};\n\nBacon.fromEvent = Bacon.fromEventTarget;\n\nBacon.fromPoll = function (delay, poll) {\n  var desc = new Bacon.Desc(Bacon, \"fromPoll\", [delay, poll]);\n  return withDesc(desc, Bacon.fromBinder(function (handler) {\n    var id = Bacon.scheduler.setInterval(handler, delay);\n    return function () {\n      return Bacon.scheduler.clearInterval(id);\n    };\n  }, poll));\n};\n\nfunction valueAndEnd(value) {\n  return [value, endEvent()];\n}\n\nBacon.fromPromise = function (promise, abort) {\n  var eventTransformer = arguments.length <= 2 || arguments[2] === undefined ? valueAndEnd : arguments[2];\n\n  return withDesc(new Bacon.Desc(Bacon, \"fromPromise\", [promise]), Bacon.fromBinder(function (handler) {\n    var bound = promise.then(handler, function (e) {\n      return handler(new Error(e));\n    });\n    if (bound && typeof bound.done === \"function\") {\n      bound.done();\n    }\n\n    if (abort) {\n      return function () {\n        if (typeof promise.abort === \"function\") {\n          return promise.abort();\n        }\n      };\n    } else {\n      return function () {};\n    }\n  }, eventTransformer));\n};\n\nBacon.Observable.prototype.groupBy = function (keyF) {\n  var limitF = arguments.length <= 1 || arguments[1] === undefined ? Bacon._.id : arguments[1];\n\n  var streams = {};\n  var src = this;\n  return src.filter(function (x) {\n    return !streams[keyF(x)];\n  }).map(function (x) {\n    var key = keyF(x);\n    var similar = src.filter(function (x) {\n      return keyF(x) === key;\n    });\n    var data = Bacon.once(x).concat(similar);\n    var limited = limitF(data, x).withHandler(function (event) {\n      this.push(event);\n      if (event.isEnd()) {\n        return delete streams[key];\n      }\n    });\n    streams[key] = limited;\n    return limited;\n  });\n};\n\nBacon.fromArray = function (values) {\n  assertArray(values);\n  if (!values.length) {\n    return withDesc(new Bacon.Desc(Bacon, \"fromArray\", values), Bacon.never());\n  } else {\n    var i = 0;\n    var stream = new EventStream(new Bacon.Desc(Bacon, \"fromArray\", [values]), function (sink) {\n      var unsubd = false;\n      var reply = Bacon.more;\n      var pushing = false;\n      var pushNeeded = false;\n      function push() {\n        pushNeeded = true;\n        if (pushing) {\n          return;\n        }\n        pushing = true;\n        while (pushNeeded) {\n          pushNeeded = false;\n          if (reply !== Bacon.noMore && !unsubd) {\n            var value = values[i++];\n            reply = sink(toEvent(value));\n            if (reply !== Bacon.noMore) {\n              if (i === values.length) {\n                sink(endEvent());\n              } else {\n                UpdateBarrier.afterTransaction(stream, push);\n              }\n            }\n          }\n        }\n        pushing = false;\n        return pushing;\n      };\n\n      push();\n      return function () {\n        unsubd = true;\n        return unsubd;\n      };\n    });\n    return stream;\n  }\n};\n\nBacon.EventStream.prototype.holdWhen = function (valve) {\n  var onHold = false;\n  var bufferedValues = [];\n  var src = this;\n  var srcIsEnded = false;\n  return new EventStream(new Bacon.Desc(this, \"holdWhen\", [valve]), function (sink) {\n    var composite = new CompositeUnsubscribe();\n    var subscribed = false;\n    var endIfBothEnded = function (unsub) {\n      if (typeof unsub === \"function\") {\n        unsub();\n      }\n      if (composite.empty() && subscribed) {\n        return sink(endEvent());\n      }\n    };\n    composite.add(function (unsubAll, unsubMe) {\n      return valve.subscribeInternal(function (event) {\n        if (event.hasValue()) {\n          onHold = event.value();\n          if (!onHold) {\n            var toSend = bufferedValues;\n            bufferedValues = [];\n            return (function () {\n              var result = [];\n              for (var i = 0, value; i < toSend.length; i++) {\n                value = toSend[i];\n                result.push(sink(nextEvent(value)));\n              }\n              if (srcIsEnded) {\n                result.push(sink(endEvent()));\n                unsubMe();\n              }\n              return result;\n            })();\n          }\n        } else if (event.isEnd()) {\n          return endIfBothEnded(unsubMe);\n        } else {\n          return sink(event);\n        }\n      });\n    });\n    composite.add(function (unsubAll, unsubMe) {\n      return src.subscribeInternal(function (event) {\n        if (onHold && event.hasValue()) {\n          return bufferedValues.push(event.value());\n        } else if (event.isEnd() && bufferedValues.length) {\n          srcIsEnded = true;\n          return endIfBothEnded(unsubMe);\n        } else {\n          return sink(event);\n        }\n      });\n    });\n    subscribed = true;\n    endIfBothEnded();\n    return composite.unsubscribe;\n  });\n};\n\nBacon.interval = function (delay) {\n  var value = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n  return withDesc(new Bacon.Desc(Bacon, \"interval\", [delay, value]), Bacon.fromPoll(delay, function () {\n    return nextEvent(value);\n  }));\n};\n\nBacon.$ = {};\nBacon.$.asEventStream = function (eventName, selector, eventTransformer) {\n  var _this11 = this;\n\n  if (_.isFunction(selector)) {\n    eventTransformer = selector;\n    selector = undefined;\n  }\n\n  return withDesc(new Bacon.Desc(this.selector || this, \"asEventStream\", [eventName]), Bacon.fromBinder(function (handler) {\n    _this11.on(eventName, selector, handler);\n    return function () {\n      return _this11.off(eventName, selector, handler);\n    };\n  }, eventTransformer));\n};\n\nif (typeof jQuery !== \"undefined\" && jQuery) {\n  jQuery.fn.asEventStream = Bacon.$.asEventStream;\n}\n\nif (typeof Zepto !== \"undefined\" && Zepto) {\n  Zepto.fn.asEventStream = Bacon.$.asEventStream;\n}\n\nBacon.Observable.prototype.last = function () {\n  var lastEvent;\n\n  return withDesc(new Bacon.Desc(this, \"last\", []), this.withHandler(function (event) {\n    if (event.isEnd()) {\n      if (lastEvent) {\n        this.push(lastEvent);\n      }\n      this.push(endEvent());\n      return Bacon.noMore;\n    } else {\n      lastEvent = event;\n    }\n  }));\n};\n\nBacon.Observable.prototype.log = function () {\n  for (var _len18 = arguments.length, args = Array(_len18), _key18 = 0; _key18 < _len18; _key18++) {\n    args[_key18] = arguments[_key18];\n  }\n\n  this.subscribe(function (event) {\n    if (typeof console !== \"undefined\" && typeof console.log === \"function\") {\n      console.log.apply(console, args.concat([event.log()]));\n    }\n  });\n  return this;\n};\n\nBacon.EventStream.prototype.merge = function (right) {\n  assertEventStream(right);\n  var left = this;\n  return withDesc(new Bacon.Desc(left, \"merge\", [right]), Bacon.mergeAll(this, right));\n};\n\nBacon.mergeAll = function () {\n  var streams = argumentsToObservables(arguments);\n  if (streams.length) {\n    return new EventStream(new Bacon.Desc(Bacon, \"mergeAll\", streams), function (sink) {\n      var ends = 0;\n      var smartSink = function (obs) {\n        return function (unsubBoth) {\n          return obs.dispatcher.subscribe(function (event) {\n            if (event.isEnd()) {\n              ends++;\n              if (ends === streams.length) {\n                return sink(endEvent());\n              } else {\n                return Bacon.more;\n              }\n            } else {\n              var reply = sink(event);\n              if (reply === Bacon.noMore) {\n                unsubBoth();\n              }\n              return reply;\n            }\n          });\n        };\n      };\n      var sinks = _.map(smartSink, streams);\n      return new Bacon.CompositeUnsubscribe(sinks).unsubscribe;\n    });\n  } else {\n    return Bacon.never();\n  }\n};\n\nBacon.repeatedly = function (delay, values) {\n  var index = 0;\n  return withDesc(new Bacon.Desc(Bacon, \"repeatedly\", [delay, values]), Bacon.fromPoll(delay, function () {\n    return values[index++ % values.length];\n  }));\n};\n\nBacon.repeat = function (generator) {\n  var index = 0;\n  return Bacon.fromBinder(function (sink) {\n    var flag = false;\n    var reply = Bacon.more;\n    var unsub = function () {};\n    function handleEvent(event) {\n      if (event.isEnd()) {\n        if (!flag) {\n          return flag = true;\n        } else {\n          return subscribeNext();\n        }\n      } else {\n        return reply = sink(event);\n      }\n    };\n    function subscribeNext() {\n      var next;\n      flag = true;\n      while (flag && reply !== Bacon.noMore) {\n        next = generator(index++);\n        flag = false;\n        if (next) {\n          unsub = next.subscribeInternal(handleEvent);\n        } else {\n          sink(endEvent());\n        }\n      }\n      return flag = true;\n    };\n    subscribeNext();\n    return function () {\n      return unsub();\n    };\n  });\n};\n\nBacon.retry = function (options) {\n  if (!_.isFunction(options.source)) {\n    throw new Exception(\"'source' option has to be a function\");\n  }\n  var source = options.source;\n  var retries = options.retries || 0;\n  var retriesDone = 0;\n  var delay = options.delay || function () {\n    return 0;\n  };\n  var isRetryable = options.isRetryable || function () {\n    return true;\n  };\n  var finished = false;\n  var error = null;\n\n  return withDesc(new Bacon.Desc(Bacon, \"retry\", [options]), Bacon.repeat(function (count) {\n    function valueStream() {\n      return source(count).endOnError().withHandler(function (event) {\n        if (event.isError()) {\n          error = event;\n          if (!(isRetryable(error.error) && (retries === 0 || retriesDone < retries))) {\n            finished = true;\n            return this.push(event);\n          }\n        } else {\n          if (event.hasValue()) {\n            error = null;\n            finished = true;\n          }\n          return this.push(event);\n        }\n      });\n    }\n\n    if (finished) {\n      return null;\n    } else if (error) {\n      var context = {\n        error: error.error,\n        retriesDone: retriesDone\n      };\n      var pause = Bacon.later(delay(context)).filter(false);\n      retriesDone++;\n      return pause.concat(Bacon.once().flatMap(valueStream));\n    } else {\n      return valueStream();\n    }\n  }));\n};\n\nBacon.sequentially = function (delay, values) {\n  var index = 0;\n  return withDesc(new Bacon.Desc(Bacon, \"sequentially\", [delay, values]), Bacon.fromPoll(delay, function () {\n    var value = values[index++];\n    if (index < values.length) {\n      return value;\n    } else if (index === values.length) {\n      return [value, endEvent()];\n    } else {\n      return endEvent();\n    }\n  }));\n};\n\nBacon.Observable.prototype.skip = function (count) {\n  return withDesc(new Bacon.Desc(this, \"skip\", [count]), this.withHandler(function (event) {\n    if (!event.hasValue()) {\n      return this.push(event);\n    } else if (count > 0) {\n      count--;\n      return Bacon.more;\n    } else {\n      return this.push(event);\n    }\n  }));\n};\n\nBacon.EventStream.prototype.skipUntil = function (starter) {\n  var started = starter.take(1).map(true).toProperty(false);\n  return withDesc(new Bacon.Desc(this, \"skipUntil\", [starter]), this.filter(started));\n};\n\nBacon.EventStream.prototype.skipWhile = function (f) {\n  assertObservableIsProperty(f);\n  var ok = false;\n\n  for (var _len19 = arguments.length, args = Array(_len19 > 1 ? _len19 - 1 : 0), _key19 = 1; _key19 < _len19; _key19++) {\n    args[_key19 - 1] = arguments[_key19];\n  }\n\n  return convertArgsToFunction(this, f, args, function (f) {\n    return withDesc(new Bacon.Desc(this, \"skipWhile\", [f]), this.withHandler(function (event) {\n      if (ok || !event.hasValue() || !f(event.value())) {\n        if (event.hasValue()) {\n          ok = true;\n        }\n        return this.push(event);\n      } else {\n        return Bacon.more;\n      }\n    }));\n  });\n};\n\nBacon.Observable.prototype.slidingWindow = function (n) {\n  var minValues = arguments.length <= 1 || arguments[1] === undefined ? 0 : arguments[1];\n\n  return withDesc(new Bacon.Desc(this, \"slidingWindow\", [n, minValues]), this.scan([], function (window, value) {\n    return window.concat([value]).slice(-n);\n  }).filter(function (values) {\n    return values.length >= minValues;\n  }));\n};\n\nvar spies = [];\nvar registerObs = function (obs) {\n  if (spies.length) {\n    if (!registerObs.running) {\n      try {\n        registerObs.running = true;\n        spies.forEach(function (spy) {\n          spy(obs);\n        });\n      } finally {\n        delete registerObs.running;\n      }\n    }\n  }\n};\n\nBacon.spy = function (spy) {\n  return spies.push(spy);\n};\n\nBacon.Property.prototype.startWith = function (seed) {\n  return withDesc(new Bacon.Desc(this, \"startWith\", [seed]), this.scan(seed, function (prev, next) {\n    return next;\n  }));\n};\n\nBacon.EventStream.prototype.startWith = function (seed) {\n  return withDesc(new Bacon.Desc(this, \"startWith\", [seed]), Bacon.once(seed).concat(this));\n};\n\nBacon.Observable.prototype.takeWhile = function (f) {\n  assertObservableIsProperty(f);\n\n  for (var _len20 = arguments.length, args = Array(_len20 > 1 ? _len20 - 1 : 0), _key20 = 1; _key20 < _len20; _key20++) {\n    args[_key20 - 1] = arguments[_key20];\n  }\n\n  return convertArgsToFunction(this, f, args, function (f) {\n    return withDesc(new Bacon.Desc(this, \"takeWhile\", [f]), this.withHandler(function (event) {\n      if (event.filter(f)) {\n        return this.push(event);\n      } else {\n        this.push(endEvent());\n        return Bacon.noMore;\n      }\n    }));\n  });\n};\n\nBacon.Observable.prototype.throttle = function (delay) {\n  return this.delayChanges(new Bacon.Desc(this, \"throttle\", [delay]), function (changes) {\n    return changes.bufferWithTime(delay).map(function (values) {\n      return values[values.length - 1];\n    });\n  });\n};\n\nObservable.prototype.firstToPromise = function (PromiseCtr) {\n  var _this12 = this;\n\n  if (typeof PromiseCtr !== \"function\") {\n    if (typeof Promise === \"function\") {\n      PromiseCtr = Promise;\n    } else {\n      throw new Exception(\"There isn't default Promise, use shim or parameter\");\n    }\n  }\n\n  return new PromiseCtr(function (resolve, reject) {\n    return _this12.subscribe(function (event) {\n      if (event.hasValue()) {\n        resolve(event.value());\n      }\n      if (event.isError()) {\n        reject(event.error);\n      }\n\n      return Bacon.noMore;\n    });\n  });\n};\n\nObservable.prototype.toPromise = function (PromiseCtr) {\n  return this.last().firstToPromise(PromiseCtr);\n};\n\nBacon[\"try\"] = function (f) {\n  return function (value) {\n    try {\n      return Bacon.once(f(value));\n    } catch (e) {\n      return new Bacon.Error(e);\n    }\n  };\n};\n\nBacon.update = function (initial) {\n  function lateBindFirst(f) {\n    return function () {\n      for (var _len22 = arguments.length, args = Array(_len22), _key22 = 0; _key22 < _len22; _key22++) {\n        args[_key22] = arguments[_key22];\n      }\n\n      return function (i) {\n        return f.apply(undefined, [i].concat(args));\n      };\n    };\n  }\n\n  for (var _len21 = arguments.length, patterns = Array(_len21 > 1 ? _len21 - 1 : 0), _key21 = 1; _key21 < _len21; _key21++) {\n    patterns[_key21 - 1] = arguments[_key21];\n  }\n\n  var i = patterns.length - 1;\n  while (i > 0) {\n    if (!(patterns[i] instanceof Function)) {\n      patterns[i] = _.always(patterns[i]);\n    }\n    patterns[i] = lateBindFirst(patterns[i]);\n    i = i - 2;\n  }\n  return withDesc(new Bacon.Desc(Bacon, \"update\", [initial].concat(patterns)), Bacon.when.apply(Bacon, patterns).scan(initial, function (x, f) {\n    return f(x);\n  }));\n};\n\nBacon.zipAsArray = function () {\n  for (var _len23 = arguments.length, args = Array(_len23), _key23 = 0; _key23 < _len23; _key23++) {\n    args[_key23] = arguments[_key23];\n  }\n\n  var streams = argumentsToObservables(args);\n  return withDesc(new Bacon.Desc(Bacon, \"zipAsArray\", streams), Bacon.zipWith(streams, function () {\n    for (var _len24 = arguments.length, xs = Array(_len24), _key24 = 0; _key24 < _len24; _key24++) {\n      xs[_key24] = arguments[_key24];\n    }\n\n    return xs;\n  }));\n};\n\nBacon.zipWith = function () {\n  for (var _len25 = arguments.length, args = Array(_len25), _key25 = 0; _key25 < _len25; _key25++) {\n    args[_key25] = arguments[_key25];\n  }\n\n  var observablesAndFunction = argumentsToObservablesAndFunction(args);\n  var streams = observablesAndFunction[0];\n  var f = observablesAndFunction[1];\n\n  streams = _.map(function (s) {\n    return s.toEventStream();\n  }, streams);\n  return withDesc(new Bacon.Desc(Bacon, \"zipWith\", [f].concat(streams)), Bacon.when(streams, f));\n};\n\nBacon.Observable.prototype.zip = function (other, f) {\n  return withDesc(new Bacon.Desc(this, \"zip\", [other]), Bacon.zipWith([this, other], f || Array));\n};\n\nfunction ESObservable(observable) {\n  this.observable = observable;\n}\n\nESObservable.prototype.subscribe = function (observerOrOnNext, onError, onComplete) {\n  var observer = typeof observerOrOnNext === 'function' ? { next: observerOrOnNext, error: onError, complete: onComplete } : observerOrOnNext;\n  var subscription = {\n    closed: false,\n    unsubscribe: function () {\n      subscription.closed = true;\n      cancel();\n    }\n  };\n\n  var cancel = this.observable.subscribe(function (event) {\n    if (event.isError()) {\n      if (observer.error) observer.error(event.error);\n      subscription.unsubscribe();\n    } else if (event.isEnd()) {\n      subscription.closed = true;\n      if (observer.complete) observer.complete();\n    } else if (observer.next) {\n      observer.next(event.value());\n    }\n  });\n  return subscription;\n};\n\nESObservable.prototype[symbol('observable')] = function () {\n  return this;\n};\n\nBacon.Observable.prototype.toESObservable = function () {\n  return new ESObservable(this);\n};\n\nBacon.Observable.prototype[symbol('observable')] = Bacon.Observable.prototype.toESObservable;\n\nBacon.fromESObservable = function (_observable) {\n  var observable;\n  if (_observable[symbol(\"observable\")]) {\n    observable = _observable[symbol(\"observable\")]();\n  } else {\n    observable = _observable;\n  }\n\n  var desc = new Bacon.Desc(Bacon, \"fromESObservable\", [observable]);\n  return new Bacon.EventStream(desc, function (sink) {\n    var cancel = observable.subscribe({\n      error: function () {\n        sink(new Bacon.Error());\n        sink(new Bacon.End());\n      },\n      next: function (value) {\n        sink(new Bacon.Next(value, true));\n      },\n      complete: function () {\n        sink(new Bacon.End());\n      }\n    });\n\n    if (cancel.unsubscribe) {\n      return function () {\n        cancel.unsubscribe();\n      };\n    } else {\n      return cancel;\n    }\n  });\n};\n\nif (typeof define !== \"undefined\" && define !== null && define.amd != null) {\n  define([], function () {\n    return Bacon;\n  });\n  if (typeof this !== \"undefined\" && this !== null) {\n    this.Bacon = Bacon;\n  }\n} else if (typeof module !== \"undefined\" && module !== null && module.exports != null) {\n  module.exports = Bacon;\n  Bacon.Bacon = Bacon;\n} else {\n    this.Bacon = Bacon;\n  }\n}).call(this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/baconjs/dist/Bacon.js\n// module id = 1\n// module chunks = 0","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 2\n// module chunks = 0","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tif(!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.l;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.i;\r\n\t\t\t}\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/module.js\n// module id = 3\n// module chunks = 0","module.exports = function() {\r\n\tthrow new Error(\"define cannot be used indirect\");\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/amd-define.js\n// module id = 4\n// module chunks = 0","/* globals __webpack_amd_options__ */\r\nmodule.exports = __webpack_amd_options__;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/amd-options.js\n// module id = 5\n// module chunks = 0"],"sourceRoot":""}